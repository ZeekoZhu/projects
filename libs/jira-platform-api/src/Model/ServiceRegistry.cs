/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// ServiceRegistry
    /// </summary>
    [DataContract(Name = "ServiceRegistry")]
    public partial class ServiceRegistry : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceRegistry" /> class.
        /// </summary>
        /// <param name="description">service description.</param>
        /// <param name="id">service ID.</param>
        /// <param name="name">service name.</param>
        /// <param name="organizationId">organization ID.</param>
        /// <param name="revision">service revision.</param>
        /// <param name="serviceTier">serviceTier.</param>
        public ServiceRegistry(string description = default(string), Guid id = default(Guid), string name = default(string), string organizationId = default(string), string revision = default(string), ServiceRegistryTier serviceTier = default(ServiceRegistryTier))
        {
            this.Description = description;
            this.Id = id;
            this.Name = name;
            this.OrganizationId = organizationId;
            this.Revision = revision;
            this.ServiceTier = serviceTier;
        }

        /// <summary>
        /// service description
        /// </summary>
        /// <value>service description</value>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// service ID
        /// </summary>
        /// <value>service ID</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// service name
        /// </summary>
        /// <value>service name</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// organization ID
        /// </summary>
        /// <value>organization ID</value>
        [DataMember(Name = "organizationId", EmitDefaultValue = false)]
        public string OrganizationId { get; set; }

        /// <summary>
        /// service revision
        /// </summary>
        /// <value>service revision</value>
        [DataMember(Name = "revision", EmitDefaultValue = false)]
        public string Revision { get; set; }

        /// <summary>
        /// Gets or Sets ServiceTier
        /// </summary>
        [DataMember(Name = "serviceTier", EmitDefaultValue = false)]
        public ServiceRegistryTier ServiceTier { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceRegistry {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  OrganizationId: ").Append(OrganizationId).Append("\n");
            sb.Append("  Revision: ").Append(Revision).Append("\n");
            sb.Append("  ServiceTier: ").Append(ServiceTier).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
