/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// The data classification.
    /// </summary>
    [DataContract(Name = "DataClassificationTagBean")]
    public partial class DataClassificationTagBean : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DataClassificationTagBean" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DataClassificationTagBean() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DataClassificationTagBean" /> class.
        /// </summary>
        /// <param name="color">The color of the data classification object..</param>
        /// <param name="description">The description of the data classification object..</param>
        /// <param name="guideline">The guideline of the data classification object..</param>
        /// <param name="id">The ID of the data classification object. (required).</param>
        /// <param name="name">The name of the data classification object..</param>
        /// <param name="rank">The rank of the data classification object..</param>
        /// <param name="status">The status of the data classification object. (required).</param>
        public DataClassificationTagBean(string color = default(string), string description = default(string), string guideline = default(string), string id = default(string), string name = default(string), int rank = default(int), string status = default(string))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for DataClassificationTagBean and cannot be null");
            }
            this.Id = id;
            // to ensure "status" is required (not null)
            if (status == null)
            {
                throw new ArgumentNullException("status is a required property for DataClassificationTagBean and cannot be null");
            }
            this.Status = status;
            this.Color = color;
            this.Description = description;
            this.Guideline = guideline;
            this.Name = name;
            this.Rank = rank;
        }

        /// <summary>
        /// The color of the data classification object.
        /// </summary>
        /// <value>The color of the data classification object.</value>
        [DataMember(Name = "color", EmitDefaultValue = false)]
        public string Color { get; set; }

        /// <summary>
        /// The description of the data classification object.
        /// </summary>
        /// <value>The description of the data classification object.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// The guideline of the data classification object.
        /// </summary>
        /// <value>The guideline of the data classification object.</value>
        [DataMember(Name = "guideline", EmitDefaultValue = false)]
        public string Guideline { get; set; }

        /// <summary>
        /// The ID of the data classification object.
        /// </summary>
        /// <value>The ID of the data classification object.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The name of the data classification object.
        /// </summary>
        /// <value>The name of the data classification object.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The rank of the data classification object.
        /// </summary>
        /// <value>The rank of the data classification object.</value>
        [DataMember(Name = "rank", EmitDefaultValue = false)]
        public int Rank { get; set; }

        /// <summary>
        /// The status of the data classification object.
        /// </summary>
        /// <value>The status of the data classification object.</value>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DataClassificationTagBean {\n");
            sb.Append("  Color: ").Append(Color).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Guideline: ").Append(Guideline).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Rank: ").Append(Rank).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
