/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details about the project.
    /// </summary>
    [DataContract(Name = "UpdateProjectDetails")]
    public partial class UpdateProjectDetails : IValidatableObject
    {
        /// <summary>
        /// The default assignee when creating issues for this project.
        /// </summary>
        /// <value>The default assignee when creating issues for this project.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AssigneeTypeEnum
        {
            /// <summary>
            /// Enum PROJECTLEAD for value: PROJECT_LEAD
            /// </summary>
            [EnumMember(Value = "PROJECT_LEAD")]
            PROJECTLEAD = 1,

            /// <summary>
            /// Enum UNASSIGNED for value: UNASSIGNED
            /// </summary>
            [EnumMember(Value = "UNASSIGNED")]
            UNASSIGNED = 2
        }


        /// <summary>
        /// The default assignee when creating issues for this project.
        /// </summary>
        /// <value>The default assignee when creating issues for this project.</value>
        [DataMember(Name = "assigneeType", EmitDefaultValue = false)]
        public AssigneeTypeEnum? AssigneeType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateProjectDetails" /> class.
        /// </summary>
        /// <param name="assigneeType">The default assignee when creating issues for this project..</param>
        /// <param name="avatarId">An integer value for the project&#39;s avatar..</param>
        /// <param name="categoryId">The ID of the project&#39;s category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-2-projectCategory-get) operation. To remove the project category from the project, set the value to &#x60;-1.&#x60;.</param>
        /// <param name="description">A brief description of the project..</param>
        /// <param name="issueSecurityScheme">The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-2-issuesecurityschemes-get) resource to get all issue security scheme IDs..</param>
        /// <param name="key">Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters..</param>
        /// <param name="lead">This parameter is deprecated because of privacy changes. Use &#x60;leadAccountId&#x60; instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Cannot be provided with &#x60;leadAccountId&#x60;..</param>
        /// <param name="leadAccountId">The account ID of the project lead. Cannot be provided with &#x60;lead&#x60;..</param>
        /// <param name="name">The name of the project..</param>
        /// <param name="notificationScheme">The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-2-notificationscheme-get) resource to get a list of notification scheme IDs..</param>
        /// <param name="permissionScheme">The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-2-permissionscheme-get) resource to see a list of all permission scheme IDs..</param>
        /// <param name="url">A link to information about this project, such as project documentation.</param>
        public UpdateProjectDetails(AssigneeTypeEnum? assigneeType = default(AssigneeTypeEnum?), long avatarId = default(long), long categoryId = default(long), string description = default(string), long issueSecurityScheme = default(long), string key = default(string), string lead = default(string), string leadAccountId = default(string), string name = default(string), long notificationScheme = default(long), long permissionScheme = default(long), string url = default(string))
        {
            this.AssigneeType = assigneeType;
            this.AvatarId = avatarId;
            this.CategoryId = categoryId;
            this.Description = description;
            this.IssueSecurityScheme = issueSecurityScheme;
            this.Key = key;
            this.Lead = lead;
            this.LeadAccountId = leadAccountId;
            this.Name = name;
            this.NotificationScheme = notificationScheme;
            this.PermissionScheme = permissionScheme;
            this.Url = url;
        }

        /// <summary>
        /// An integer value for the project&#39;s avatar.
        /// </summary>
        /// <value>An integer value for the project&#39;s avatar.</value>
        [DataMember(Name = "avatarId", EmitDefaultValue = false)]
        public long AvatarId { get; set; }

        /// <summary>
        /// The ID of the project&#39;s category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-2-projectCategory-get) operation. To remove the project category from the project, set the value to &#x60;-1.&#x60;
        /// </summary>
        /// <value>The ID of the project&#39;s category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-2-projectCategory-get) operation. To remove the project category from the project, set the value to &#x60;-1.&#x60;</value>
        [DataMember(Name = "categoryId", EmitDefaultValue = false)]
        public long CategoryId { get; set; }

        /// <summary>
        /// A brief description of the project.
        /// </summary>
        /// <value>A brief description of the project.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-2-issuesecurityschemes-get) resource to get all issue security scheme IDs.
        /// </summary>
        /// <value>The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-2-issuesecurityschemes-get) resource to get all issue security scheme IDs.</value>
        [DataMember(Name = "issueSecurityScheme", EmitDefaultValue = false)]
        public long IssueSecurityScheme { get; set; }

        /// <summary>
        /// Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.
        /// </summary>
        /// <value>Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.</value>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// This parameter is deprecated because of privacy changes. Use &#x60;leadAccountId&#x60; instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Cannot be provided with &#x60;leadAccountId&#x60;.
        /// </summary>
        /// <value>This parameter is deprecated because of privacy changes. Use &#x60;leadAccountId&#x60; instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Cannot be provided with &#x60;leadAccountId&#x60;.</value>
        [DataMember(Name = "lead", EmitDefaultValue = false)]
        public string Lead { get; set; }

        /// <summary>
        /// The account ID of the project lead. Cannot be provided with &#x60;lead&#x60;.
        /// </summary>
        /// <value>The account ID of the project lead. Cannot be provided with &#x60;lead&#x60;.</value>
        [DataMember(Name = "leadAccountId", EmitDefaultValue = false)]
        public string LeadAccountId { get; set; }

        /// <summary>
        /// The name of the project.
        /// </summary>
        /// <value>The name of the project.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-2-notificationscheme-get) resource to get a list of notification scheme IDs.
        /// </summary>
        /// <value>The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-2-notificationscheme-get) resource to get a list of notification scheme IDs.</value>
        [DataMember(Name = "notificationScheme", EmitDefaultValue = false)]
        public long NotificationScheme { get; set; }

        /// <summary>
        /// The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-2-permissionscheme-get) resource to see a list of all permission scheme IDs.
        /// </summary>
        /// <value>The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-2-permissionscheme-get) resource to see a list of all permission scheme IDs.</value>
        [DataMember(Name = "permissionScheme", EmitDefaultValue = false)]
        public long PermissionScheme { get; set; }

        /// <summary>
        /// A link to information about this project, such as project documentation
        /// </summary>
        /// <value>A link to information about this project, such as project documentation</value>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateProjectDetails {\n");
            sb.Append("  AssigneeType: ").Append(AssigneeType).Append("\n");
            sb.Append("  AvatarId: ").Append(AvatarId).Append("\n");
            sb.Append("  CategoryId: ").Append(CategoryId).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  IssueSecurityScheme: ").Append(IssueSecurityScheme).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Lead: ").Append(Lead).Append("\n");
            sb.Append("  LeadAccountId: ").Append(LeadAccountId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  NotificationScheme: ").Append(NotificationScheme).Append("\n");
            sb.Append("  PermissionScheme: ").Append(PermissionScheme).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // LeadAccountId (string) maxLength
            if (this.LeadAccountId != null && this.LeadAccountId.Length > 128)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LeadAccountId, length must be less than 128.", new [] { "LeadAccountId" });
            }

            yield break;
        }
    }

}
