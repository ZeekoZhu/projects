/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// A clause that asserts whether a field was changed. For example, &#x60;status CHANGED AFTER startOfMonth(-1M)&#x60;.See [CHANGED](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for more information about the CHANGED operator.
    /// </summary>
    [DataContract(Name = "FieldChangedClause")]
    public partial class FieldChangedClause : IValidatableObject
    {
        /// <summary>
        /// The operator applied to the field.
        /// </summary>
        /// <value>The operator applied to the field.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OperatorEnum
        {
            /// <summary>
            /// Enum Changed for value: changed
            /// </summary>
            [EnumMember(Value = "changed")]
            Changed = 1
        }


        /// <summary>
        /// The operator applied to the field.
        /// </summary>
        /// <value>The operator applied to the field.</value>
        [DataMember(Name = "operator", IsRequired = true, EmitDefaultValue = true)]
        public OperatorEnum VarOperator { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="FieldChangedClause" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FieldChangedClause() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FieldChangedClause" /> class.
        /// </summary>
        /// <param name="field">field (required).</param>
        /// <param name="varOperator">The operator applied to the field. (required).</param>
        /// <param name="predicates">The list of time predicates. (required).</param>
        public FieldChangedClause(JqlQueryField field = default(JqlQueryField), OperatorEnum varOperator = default(OperatorEnum), List<JqlQueryClauseTimePredicate> predicates = default(List<JqlQueryClauseTimePredicate>))
        {
            // to ensure "field" is required (not null)
            if (field == null)
            {
                throw new ArgumentNullException("field is a required property for FieldChangedClause and cannot be null");
            }
            this.Field = field;
            this.VarOperator = varOperator;
            // to ensure "predicates" is required (not null)
            if (predicates == null)
            {
                throw new ArgumentNullException("predicates is a required property for FieldChangedClause and cannot be null");
            }
            this.Predicates = predicates;
        }

        /// <summary>
        /// Gets or Sets Field
        /// </summary>
        [DataMember(Name = "field", IsRequired = true, EmitDefaultValue = true)]
        public JqlQueryField Field { get; set; }

        /// <summary>
        /// The list of time predicates.
        /// </summary>
        /// <value>The list of time predicates.</value>
        [DataMember(Name = "predicates", IsRequired = true, EmitDefaultValue = true)]
        public List<JqlQueryClauseTimePredicate> Predicates { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FieldChangedClause {\n");
            sb.Append("  Field: ").Append(Field).Append("\n");
            sb.Append("  VarOperator: ").Append(VarOperator).Append("\n");
            sb.Append("  Predicates: ").Append(Predicates).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
