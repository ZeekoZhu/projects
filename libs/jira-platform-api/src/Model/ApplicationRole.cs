/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details of an application role.
    /// </summary>
    [DataContract(Name = "ApplicationRole")]
    public partial class ApplicationRole : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationRole" /> class.
        /// </summary>
        /// <param name="defaultGroups">The groups that are granted default access for this application role. As a group&#39;s name can change, use of &#x60;defaultGroupsDetails&#x60; is recommended to identify a groups..</param>
        /// <param name="defaultGroupsDetails">The groups that are granted default access for this application role..</param>
        /// <param name="defined">Deprecated..</param>
        /// <param name="groupDetails">The groups associated with the application role..</param>
        /// <param name="groups">The groups associated with the application role. As a group&#39;s name can change, use of &#x60;groupDetails&#x60; is recommended to identify a groups..</param>
        /// <param name="hasUnlimitedSeats">hasUnlimitedSeats.</param>
        /// <param name="key">The key of the application role..</param>
        /// <param name="name">The display name of the application role..</param>
        /// <param name="numberOfSeats">The maximum count of users on your license..</param>
        /// <param name="platform">Indicates if the application role belongs to Jira platform (&#x60;jira-core&#x60;)..</param>
        /// <param name="remainingSeats">The count of users remaining on your license..</param>
        /// <param name="selectedByDefault">Determines whether this application role should be selected by default on user creation..</param>
        /// <param name="userCount">The number of users counting against your license..</param>
        /// <param name="userCountDescription">The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license..</param>
        public ApplicationRole(List<string> defaultGroups = default(List<string>), List<GroupName> defaultGroupsDetails = default(List<GroupName>), bool defined = default(bool), List<GroupName> groupDetails = default(List<GroupName>), List<string> groups = default(List<string>), bool hasUnlimitedSeats = default(bool), string key = default(string), string name = default(string), int numberOfSeats = default(int), bool platform = default(bool), int remainingSeats = default(int), bool selectedByDefault = default(bool), int userCount = default(int), string userCountDescription = default(string))
        {
            this.DefaultGroups = defaultGroups;
            this.DefaultGroupsDetails = defaultGroupsDetails;
            this.Defined = defined;
            this.GroupDetails = groupDetails;
            this.Groups = groups;
            this.HasUnlimitedSeats = hasUnlimitedSeats;
            this.Key = key;
            this.Name = name;
            this.NumberOfSeats = numberOfSeats;
            this.Platform = platform;
            this.RemainingSeats = remainingSeats;
            this.SelectedByDefault = selectedByDefault;
            this.UserCount = userCount;
            this.UserCountDescription = userCountDescription;
        }

        /// <summary>
        /// The groups that are granted default access for this application role. As a group&#39;s name can change, use of &#x60;defaultGroupsDetails&#x60; is recommended to identify a groups.
        /// </summary>
        /// <value>The groups that are granted default access for this application role. As a group&#39;s name can change, use of &#x60;defaultGroupsDetails&#x60; is recommended to identify a groups.</value>
        [DataMember(Name = "defaultGroups", EmitDefaultValue = false)]
        public List<string> DefaultGroups { get; set; }

        /// <summary>
        /// The groups that are granted default access for this application role.
        /// </summary>
        /// <value>The groups that are granted default access for this application role.</value>
        [DataMember(Name = "defaultGroupsDetails", EmitDefaultValue = false)]
        public List<GroupName> DefaultGroupsDetails { get; set; }

        /// <summary>
        /// Deprecated.
        /// </summary>
        /// <value>Deprecated.</value>
        [DataMember(Name = "defined", EmitDefaultValue = true)]
        public bool Defined { get; set; }

        /// <summary>
        /// The groups associated with the application role.
        /// </summary>
        /// <value>The groups associated with the application role.</value>
        [DataMember(Name = "groupDetails", EmitDefaultValue = false)]
        public List<GroupName> GroupDetails { get; set; }

        /// <summary>
        /// The groups associated with the application role. As a group&#39;s name can change, use of &#x60;groupDetails&#x60; is recommended to identify a groups.
        /// </summary>
        /// <value>The groups associated with the application role. As a group&#39;s name can change, use of &#x60;groupDetails&#x60; is recommended to identify a groups.</value>
        [DataMember(Name = "groups", EmitDefaultValue = false)]
        public List<string> Groups { get; set; }

        /// <summary>
        /// Gets or Sets HasUnlimitedSeats
        /// </summary>
        [DataMember(Name = "hasUnlimitedSeats", EmitDefaultValue = true)]
        public bool HasUnlimitedSeats { get; set; }

        /// <summary>
        /// The key of the application role.
        /// </summary>
        /// <value>The key of the application role.</value>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// The display name of the application role.
        /// </summary>
        /// <value>The display name of the application role.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The maximum count of users on your license.
        /// </summary>
        /// <value>The maximum count of users on your license.</value>
        [DataMember(Name = "numberOfSeats", EmitDefaultValue = false)]
        public int NumberOfSeats { get; set; }

        /// <summary>
        /// Indicates if the application role belongs to Jira platform (&#x60;jira-core&#x60;).
        /// </summary>
        /// <value>Indicates if the application role belongs to Jira platform (&#x60;jira-core&#x60;).</value>
        [DataMember(Name = "platform", EmitDefaultValue = true)]
        public bool Platform { get; set; }

        /// <summary>
        /// The count of users remaining on your license.
        /// </summary>
        /// <value>The count of users remaining on your license.</value>
        [DataMember(Name = "remainingSeats", EmitDefaultValue = false)]
        public int RemainingSeats { get; set; }

        /// <summary>
        /// Determines whether this application role should be selected by default on user creation.
        /// </summary>
        /// <value>Determines whether this application role should be selected by default on user creation.</value>
        [DataMember(Name = "selectedByDefault", EmitDefaultValue = true)]
        public bool SelectedByDefault { get; set; }

        /// <summary>
        /// The number of users counting against your license.
        /// </summary>
        /// <value>The number of users counting against your license.</value>
        [DataMember(Name = "userCount", EmitDefaultValue = false)]
        public int UserCount { get; set; }

        /// <summary>
        /// The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.
        /// </summary>
        /// <value>The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.</value>
        [DataMember(Name = "userCountDescription", EmitDefaultValue = false)]
        public string UserCountDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApplicationRole {\n");
            sb.Append("  DefaultGroups: ").Append(DefaultGroups).Append("\n");
            sb.Append("  DefaultGroupsDetails: ").Append(DefaultGroupsDetails).Append("\n");
            sb.Append("  Defined: ").Append(Defined).Append("\n");
            sb.Append("  GroupDetails: ").Append(GroupDetails).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("  HasUnlimitedSeats: ").Append(HasUnlimitedSeats).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  NumberOfSeats: ").Append(NumberOfSeats).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  RemainingSeats: ").Append(RemainingSeats).Append("\n");
            sb.Append("  SelectedByDefault: ").Append(SelectedByDefault).Append("\n");
            sb.Append("  UserCount: ").Append(UserCount).Append("\n");
            sb.Append("  UserCountDescription: ").Append(UserCountDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
