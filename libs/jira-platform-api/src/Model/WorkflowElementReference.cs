/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// A reference to the location of the error. This will be null if the error does not refer to a specific element.
    /// </summary>
    [DataContract(Name = "WorkflowElementReference")]
    public partial class WorkflowElementReference : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkflowElementReference" /> class.
        /// </summary>
        /// <param name="propertyKey">A property key..</param>
        /// <param name="ruleId">A rule ID..</param>
        /// <param name="statusMappingReference">statusMappingReference.</param>
        /// <param name="statusReference">A status reference..</param>
        /// <param name="transitionId">A transition ID..</param>
        public WorkflowElementReference(string propertyKey = default(string), string ruleId = default(string), ProjectAndIssueTypePair statusMappingReference = default(ProjectAndIssueTypePair), string statusReference = default(string), string transitionId = default(string))
        {
            this.PropertyKey = propertyKey;
            this.RuleId = ruleId;
            this.StatusMappingReference = statusMappingReference;
            this.StatusReference = statusReference;
            this.TransitionId = transitionId;
        }

        /// <summary>
        /// A property key.
        /// </summary>
        /// <value>A property key.</value>
        [DataMember(Name = "propertyKey", EmitDefaultValue = false)]
        public string PropertyKey { get; set; }

        /// <summary>
        /// A rule ID.
        /// </summary>
        /// <value>A rule ID.</value>
        [DataMember(Name = "ruleId", EmitDefaultValue = false)]
        public string RuleId { get; set; }

        /// <summary>
        /// Gets or Sets StatusMappingReference
        /// </summary>
        [DataMember(Name = "statusMappingReference", EmitDefaultValue = false)]
        public ProjectAndIssueTypePair StatusMappingReference { get; set; }

        /// <summary>
        /// A status reference.
        /// </summary>
        /// <value>A status reference.</value>
        [DataMember(Name = "statusReference", EmitDefaultValue = false)]
        public string StatusReference { get; set; }

        /// <summary>
        /// A transition ID.
        /// </summary>
        /// <value>A transition ID.</value>
        [DataMember(Name = "transitionId", EmitDefaultValue = false)]
        public string TransitionId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkflowElementReference {\n");
            sb.Append("  PropertyKey: ").Append(PropertyKey).Append("\n");
            sb.Append("  RuleId: ").Append(RuleId).Append("\n");
            sb.Append("  StatusMappingReference: ").Append(StatusMappingReference).Append("\n");
            sb.Append("  StatusReference: ").Append(StatusReference).Append("\n");
            sb.Append("  TransitionId: ").Append(TransitionId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
