/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// JiraExpressionsComplexityBean
    /// </summary>
    [DataContract(Name = "JiraExpressionsComplexityBean")]
    public partial class JiraExpressionsComplexityBean : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JiraExpressionsComplexityBean" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected JiraExpressionsComplexityBean() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="JiraExpressionsComplexityBean" /> class.
        /// </summary>
        /// <param name="beans">The number of Jira REST API beans returned in the response. (required).</param>
        /// <param name="expensiveOperations">The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields. (required).</param>
        /// <param name="primitiveValues">The number of primitive values returned in the response. (required).</param>
        /// <param name="steps">The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function. (required).</param>
        public JiraExpressionsComplexityBean(JiraExpressionsComplexityValueBean beans = default(JiraExpressionsComplexityValueBean), JiraExpressionsComplexityValueBean expensiveOperations = default(JiraExpressionsComplexityValueBean), JiraExpressionsComplexityValueBean primitiveValues = default(JiraExpressionsComplexityValueBean), JiraExpressionsComplexityValueBean steps = default(JiraExpressionsComplexityValueBean))
        {
            // to ensure "beans" is required (not null)
            if (beans == null)
            {
                throw new ArgumentNullException("beans is a required property for JiraExpressionsComplexityBean and cannot be null");
            }
            this.Beans = beans;
            // to ensure "expensiveOperations" is required (not null)
            if (expensiveOperations == null)
            {
                throw new ArgumentNullException("expensiveOperations is a required property for JiraExpressionsComplexityBean and cannot be null");
            }
            this.ExpensiveOperations = expensiveOperations;
            // to ensure "primitiveValues" is required (not null)
            if (primitiveValues == null)
            {
                throw new ArgumentNullException("primitiveValues is a required property for JiraExpressionsComplexityBean and cannot be null");
            }
            this.PrimitiveValues = primitiveValues;
            // to ensure "steps" is required (not null)
            if (steps == null)
            {
                throw new ArgumentNullException("steps is a required property for JiraExpressionsComplexityBean and cannot be null");
            }
            this.Steps = steps;
        }

        /// <summary>
        /// The number of Jira REST API beans returned in the response.
        /// </summary>
        /// <value>The number of Jira REST API beans returned in the response.</value>
        [DataMember(Name = "beans", IsRequired = true, EmitDefaultValue = true)]
        public JiraExpressionsComplexityValueBean Beans { get; set; }

        /// <summary>
        /// The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields.
        /// </summary>
        /// <value>The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields.</value>
        [DataMember(Name = "expensiveOperations", IsRequired = true, EmitDefaultValue = true)]
        public JiraExpressionsComplexityValueBean ExpensiveOperations { get; set; }

        /// <summary>
        /// The number of primitive values returned in the response.
        /// </summary>
        /// <value>The number of primitive values returned in the response.</value>
        [DataMember(Name = "primitiveValues", IsRequired = true, EmitDefaultValue = true)]
        public JiraExpressionsComplexityValueBean PrimitiveValues { get; set; }

        /// <summary>
        /// The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function.
        /// </summary>
        /// <value>The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function.</value>
        [DataMember(Name = "steps", IsRequired = true, EmitDefaultValue = true)]
        public JiraExpressionsComplexityValueBean Steps { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JiraExpressionsComplexityBean {\n");
            sb.Append("  Beans: ").Append(Beans).Append("\n");
            sb.Append("  ExpensiveOperations: ").Append(ExpensiveOperations).Append("\n");
            sb.Append("  PrimitiveValues: ").Append(PrimitiveValues).Append("\n");
            sb.Append("  Steps: ").Append(Steps).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
