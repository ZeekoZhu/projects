/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// RemoveOptionFromIssuesResult
    /// </summary>
    [DataContract(Name = "RemoveOptionFromIssuesResult")]
    public partial class RemoveOptionFromIssuesResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemoveOptionFromIssuesResult" /> class.
        /// </summary>
        /// <param name="errors">A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned..</param>
        /// <param name="modifiedIssues">The IDs of the modified issues..</param>
        /// <param name="unmodifiedIssues">The IDs of the unchanged issues, those issues where errors prevent modification..</param>
        public RemoveOptionFromIssuesResult(SimpleErrorCollection errors = default(SimpleErrorCollection), List<long> modifiedIssues = default(List<long>), List<long> unmodifiedIssues = default(List<long>))
        {
            this.Errors = errors;
            this.ModifiedIssues = modifiedIssues;
            this.UnmodifiedIssues = unmodifiedIssues;
        }

        /// <summary>
        /// A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned.
        /// </summary>
        /// <value>A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned.</value>
        [DataMember(Name = "errors", EmitDefaultValue = false)]
        public SimpleErrorCollection Errors { get; set; }

        /// <summary>
        /// The IDs of the modified issues.
        /// </summary>
        /// <value>The IDs of the modified issues.</value>
        [DataMember(Name = "modifiedIssues", EmitDefaultValue = false)]
        public List<long> ModifiedIssues { get; set; }

        /// <summary>
        /// The IDs of the unchanged issues, those issues where errors prevent modification.
        /// </summary>
        /// <value>The IDs of the unchanged issues, those issues where errors prevent modification.</value>
        [DataMember(Name = "unmodifiedIssues", EmitDefaultValue = false)]
        public List<long> UnmodifiedIssues { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemoveOptionFromIssuesResult {\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("  ModifiedIssues: ").Append(ModifiedIssues).Append("\n");
            sb.Append("  UnmodifiedIssues: ").Append(UnmodifiedIssues).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
