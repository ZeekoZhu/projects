/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details of an issue remote link.
    /// </summary>
    [DataContract(Name = "RemoteIssueLink")]
    public partial class RemoteIssueLink : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RemoteIssueLink" /> class.
        /// </summary>
        /// <param name="application">Details of the remote application the linked item is in..</param>
        /// <param name="globalId">The global ID of the link, such as the ID of the item on the remote system..</param>
        /// <param name="id">The ID of the link..</param>
        /// <param name="varObject">Details of the item linked to..</param>
        /// <param name="relationship">Description of the relationship between the issue and the linked item..</param>
        /// <param name="self">The URL of the link..</param>
        public RemoteIssueLink(Application application = default(Application), string globalId = default(string), long id = default(long), RemoteObject varObject = default(RemoteObject), string relationship = default(string), string self = default(string))
        {
            this.Application = application;
            this.GlobalId = globalId;
            this.Id = id;
            this.VarObject = varObject;
            this.Relationship = relationship;
            this.Self = self;
        }

        /// <summary>
        /// Details of the remote application the linked item is in.
        /// </summary>
        /// <value>Details of the remote application the linked item is in.</value>
        [DataMember(Name = "application", EmitDefaultValue = false)]
        public Application Application { get; set; }

        /// <summary>
        /// The global ID of the link, such as the ID of the item on the remote system.
        /// </summary>
        /// <value>The global ID of the link, such as the ID of the item on the remote system.</value>
        [DataMember(Name = "globalId", EmitDefaultValue = false)]
        public string GlobalId { get; set; }

        /// <summary>
        /// The ID of the link.
        /// </summary>
        /// <value>The ID of the link.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Details of the item linked to.
        /// </summary>
        /// <value>Details of the item linked to.</value>
        [DataMember(Name = "object", EmitDefaultValue = false)]
        public RemoteObject VarObject { get; set; }

        /// <summary>
        /// Description of the relationship between the issue and the linked item.
        /// </summary>
        /// <value>Description of the relationship between the issue and the linked item.</value>
        [DataMember(Name = "relationship", EmitDefaultValue = false)]
        public string Relationship { get; set; }

        /// <summary>
        /// The URL of the link.
        /// </summary>
        /// <value>The URL of the link.</value>
        [DataMember(Name = "self", EmitDefaultValue = false)]
        public string Self { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RemoteIssueLink {\n");
            sb.Append("  Application: ").Append(Application).Append("\n");
            sb.Append("  GlobalId: ").Append(GlobalId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  VarObject: ").Append(VarObject).Append("\n");
            sb.Append("  Relationship: ").Append(Relationship).Append("\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
