/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details about the Jira instance.
    /// </summary>
    [DataContract(Name = "ServerInformation")]
    public partial class ServerInformation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServerInformation" /> class.
        /// </summary>
        /// <param name="baseUrl">The base URL of the Jira instance..</param>
        /// <param name="buildDate">The timestamp when the Jira version was built..</param>
        /// <param name="buildNumber">The build number of the Jira version..</param>
        /// <param name="deploymentType">The type of server deployment. This is always returned as *Cloud*..</param>
        /// <param name="displayUrl">The display URL of the Jira instance..</param>
        /// <param name="displayUrlServicedeskHelpCenter">The display URL of the Servicedesk Help Center..</param>
        /// <param name="healthChecks">Jira instance health check results. Deprecated and no longer returned..</param>
        /// <param name="scmInfo">The unique identifier of the Jira version..</param>
        /// <param name="serverTime">The time in Jira when this request was responded to..</param>
        /// <param name="serverTimeZone">serverTimeZone.</param>
        /// <param name="serverTitle">The name of the Jira instance..</param>
        /// <param name="varVersion">The version of Jira..</param>
        /// <param name="versionNumbers">The major, minor, and revision version numbers of the Jira version..</param>
        public ServerInformation(string baseUrl = default(string), DateTime buildDate = default(DateTime), int buildNumber = default(int), string deploymentType = default(string), string displayUrl = default(string), string displayUrlServicedeskHelpCenter = default(string), List<HealthCheckResult> healthChecks = default(List<HealthCheckResult>), string scmInfo = default(string), DateTime serverTime = default(DateTime), ServerInformationServerTimeZone serverTimeZone = default(ServerInformationServerTimeZone), string serverTitle = default(string), string varVersion = default(string), List<int> versionNumbers = default(List<int>))
        {
            this.BaseUrl = baseUrl;
            this.BuildDate = buildDate;
            this.BuildNumber = buildNumber;
            this.DeploymentType = deploymentType;
            this.DisplayUrl = displayUrl;
            this.DisplayUrlServicedeskHelpCenter = displayUrlServicedeskHelpCenter;
            this.HealthChecks = healthChecks;
            this.ScmInfo = scmInfo;
            this.ServerTime = serverTime;
            this.ServerTimeZone = serverTimeZone;
            this.ServerTitle = serverTitle;
            this.VarVersion = varVersion;
            this.VersionNumbers = versionNumbers;
        }

        /// <summary>
        /// The base URL of the Jira instance.
        /// </summary>
        /// <value>The base URL of the Jira instance.</value>
        [DataMember(Name = "baseUrl", EmitDefaultValue = false)]
        public string BaseUrl { get; set; }

        /// <summary>
        /// The timestamp when the Jira version was built.
        /// </summary>
        /// <value>The timestamp when the Jira version was built.</value>
        [DataMember(Name = "buildDate", EmitDefaultValue = false)]
        public DateTime BuildDate { get; set; }

        /// <summary>
        /// The build number of the Jira version.
        /// </summary>
        /// <value>The build number of the Jira version.</value>
        [DataMember(Name = "buildNumber", EmitDefaultValue = false)]
        public int BuildNumber { get; set; }

        /// <summary>
        /// The type of server deployment. This is always returned as *Cloud*.
        /// </summary>
        /// <value>The type of server deployment. This is always returned as *Cloud*.</value>
        [DataMember(Name = "deploymentType", EmitDefaultValue = false)]
        public string DeploymentType { get; set; }

        /// <summary>
        /// The display URL of the Jira instance.
        /// </summary>
        /// <value>The display URL of the Jira instance.</value>
        [DataMember(Name = "displayUrl", EmitDefaultValue = false)]
        public string DisplayUrl { get; set; }

        /// <summary>
        /// The display URL of the Servicedesk Help Center.
        /// </summary>
        /// <value>The display URL of the Servicedesk Help Center.</value>
        [DataMember(Name = "displayUrlServicedeskHelpCenter", EmitDefaultValue = false)]
        public string DisplayUrlServicedeskHelpCenter { get; set; }

        /// <summary>
        /// Jira instance health check results. Deprecated and no longer returned.
        /// </summary>
        /// <value>Jira instance health check results. Deprecated and no longer returned.</value>
        [DataMember(Name = "healthChecks", EmitDefaultValue = false)]
        public List<HealthCheckResult> HealthChecks { get; set; }

        /// <summary>
        /// The unique identifier of the Jira version.
        /// </summary>
        /// <value>The unique identifier of the Jira version.</value>
        [DataMember(Name = "scmInfo", EmitDefaultValue = false)]
        public string ScmInfo { get; set; }

        /// <summary>
        /// The time in Jira when this request was responded to.
        /// </summary>
        /// <value>The time in Jira when this request was responded to.</value>
        [DataMember(Name = "serverTime", EmitDefaultValue = false)]
        public DateTime ServerTime { get; set; }

        /// <summary>
        /// Gets or Sets ServerTimeZone
        /// </summary>
        [DataMember(Name = "serverTimeZone", EmitDefaultValue = false)]
        public ServerInformationServerTimeZone ServerTimeZone { get; set; }

        /// <summary>
        /// The name of the Jira instance.
        /// </summary>
        /// <value>The name of the Jira instance.</value>
        [DataMember(Name = "serverTitle", EmitDefaultValue = false)]
        public string ServerTitle { get; set; }

        /// <summary>
        /// The version of Jira.
        /// </summary>
        /// <value>The version of Jira.</value>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// The major, minor, and revision version numbers of the Jira version.
        /// </summary>
        /// <value>The major, minor, and revision version numbers of the Jira version.</value>
        [DataMember(Name = "versionNumbers", EmitDefaultValue = false)]
        public List<int> VersionNumbers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServerInformation {\n");
            sb.Append("  BaseUrl: ").Append(BaseUrl).Append("\n");
            sb.Append("  BuildDate: ").Append(BuildDate).Append("\n");
            sb.Append("  BuildNumber: ").Append(BuildNumber).Append("\n");
            sb.Append("  DeploymentType: ").Append(DeploymentType).Append("\n");
            sb.Append("  DisplayUrl: ").Append(DisplayUrl).Append("\n");
            sb.Append("  DisplayUrlServicedeskHelpCenter: ").Append(DisplayUrlServicedeskHelpCenter).Append("\n");
            sb.Append("  HealthChecks: ").Append(HealthChecks).Append("\n");
            sb.Append("  ScmInfo: ").Append(ScmInfo).Append("\n");
            sb.Append("  ServerTime: ").Append(ServerTime).Append("\n");
            sb.Append("  ServerTimeZone: ").Append(ServerTimeZone).Append("\n");
            sb.Append("  ServerTitle: ").Append(ServerTitle).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  VersionNumbers: ").Append(VersionNumbers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
