/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Issue security level member.
    /// </summary>
    [DataContract(Name = "SecurityLevelMember")]
    public partial class SecurityLevelMember : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SecurityLevelMember" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SecurityLevelMember()
        {
            this.AdditionalProperties = new Dictionary<string, object>();
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="SecurityLevelMember" /> class.
        /// </summary>
        /// <param name="holder">holder (required).</param>
        /// <param name="managed">managed.</param>
        public SecurityLevelMember(SecurityLevelMemberHolder holder = default(SecurityLevelMemberHolder), bool managed = default(bool))
        {
            // to ensure "holder" is required (not null)
            if (holder == null)
            {
                throw new ArgumentNullException("holder is a required property for SecurityLevelMember and cannot be null");
            }
            this.Holder = holder;
            this.Managed = managed;
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets Holder
        /// </summary>
        [DataMember(Name = "holder", IsRequired = true, EmitDefaultValue = true)]
        public SecurityLevelMemberHolder Holder { get; set; }

        /// <summary>
        /// The ID of the issue security level member.
        /// </summary>
        /// <value>The ID of the issue security level member.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; private set; }

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return false;
        }
        /// <summary>
        /// The ID of the issue security level.
        /// </summary>
        /// <value>The ID of the issue security level.</value>
        [DataMember(Name = "issueSecurityLevelId", IsRequired = true, EmitDefaultValue = true)]
        public string IssueSecurityLevelId { get; private set; }

        /// <summary>
        /// Returns false as IssueSecurityLevelId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIssueSecurityLevelId()
        {
            return false;
        }
        /// <summary>
        /// The ID of the issue security scheme.
        /// </summary>
        /// <value>The ID of the issue security scheme.</value>
        [DataMember(Name = "issueSecuritySchemeId", IsRequired = true, EmitDefaultValue = true)]
        public string IssueSecuritySchemeId { get; private set; }

        /// <summary>
        /// Returns false as IssueSecuritySchemeId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIssueSecuritySchemeId()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Managed
        /// </summary>
        [DataMember(Name = "managed", EmitDefaultValue = true)]
        public bool Managed { get; set; }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SecurityLevelMember {\n");
            sb.Append("  Holder: ").Append(Holder).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IssueSecurityLevelId: ").Append(IssueSecurityLevelId).Append("\n");
            sb.Append("  IssueSecuritySchemeId: ").Append(IssueSecuritySchemeId).Append("\n");
            sb.Append("  Managed: ").Append(Managed).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
