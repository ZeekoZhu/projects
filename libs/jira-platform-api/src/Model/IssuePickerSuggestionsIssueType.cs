/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// A type of issue suggested for use in auto-completion.
    /// </summary>
    [DataContract(Name = "IssuePickerSuggestionsIssueType")]
    public partial class IssuePickerSuggestionsIssueType : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IssuePickerSuggestionsIssueType" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public IssuePickerSuggestionsIssueType()
        {
        }

        /// <summary>
        /// The ID of the type of issues suggested for use in auto-completion.
        /// </summary>
        /// <value>The ID of the type of issues suggested for use in auto-completion.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; private set; }

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return false;
        }
        /// <summary>
        /// A list of issues suggested for use in auto-completion.
        /// </summary>
        /// <value>A list of issues suggested for use in auto-completion.</value>
        [DataMember(Name = "issues", EmitDefaultValue = false)]
        public List<SuggestedIssue> Issues { get; private set; }

        /// <summary>
        /// Returns false as Issues should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIssues()
        {
            return false;
        }
        /// <summary>
        /// The label of the type of issues suggested for use in auto-completion.
        /// </summary>
        /// <value>The label of the type of issues suggested for use in auto-completion.</value>
        [DataMember(Name = "label", EmitDefaultValue = false)]
        public string Label { get; private set; }

        /// <summary>
        /// Returns false as Label should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeLabel()
        {
            return false;
        }
        /// <summary>
        /// If no issue suggestions are found, returns a message indicating no suggestions were found,
        /// </summary>
        /// <value>If no issue suggestions are found, returns a message indicating no suggestions were found,</value>
        [DataMember(Name = "msg", EmitDefaultValue = false)]
        public string Msg { get; private set; }

        /// <summary>
        /// Returns false as Msg should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeMsg()
        {
            return false;
        }
        /// <summary>
        /// If issue suggestions are found, returns a message indicating the number of issues suggestions found and returned.
        /// </summary>
        /// <value>If issue suggestions are found, returns a message indicating the number of issues suggestions found and returned.</value>
        [DataMember(Name = "sub", EmitDefaultValue = false)]
        public string Sub { get; private set; }

        /// <summary>
        /// Returns false as Sub should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSub()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IssuePickerSuggestionsIssueType {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Issues: ").Append(Issues).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Msg: ").Append(Msg).Append("\n");
            sb.Append("  Sub: ").Append(Sub).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
