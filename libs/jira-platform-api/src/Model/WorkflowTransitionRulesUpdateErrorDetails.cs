/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details of any errors encountered while updating workflow transition rules for a workflow.
    /// </summary>
    [DataContract(Name = "WorkflowTransitionRulesUpdateErrorDetails")]
    public partial class WorkflowTransitionRulesUpdateErrorDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkflowTransitionRulesUpdateErrorDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WorkflowTransitionRulesUpdateErrorDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkflowTransitionRulesUpdateErrorDetails" /> class.
        /// </summary>
        /// <param name="ruleUpdateErrors">A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn&#39;t updated. (required).</param>
        /// <param name="updateErrors">The list of errors that specify why the workflow update failed. The workflow was not updated if the list contains any entries. (required).</param>
        /// <param name="workflowId">workflowId (required).</param>
        public WorkflowTransitionRulesUpdateErrorDetails(Dictionary<string, List<string>> ruleUpdateErrors = default(Dictionary<string, List<string>>), List<string> updateErrors = default(List<string>), WorkflowId workflowId = default(WorkflowId))
        {
            // to ensure "ruleUpdateErrors" is required (not null)
            if (ruleUpdateErrors == null)
            {
                throw new ArgumentNullException("ruleUpdateErrors is a required property for WorkflowTransitionRulesUpdateErrorDetails and cannot be null");
            }
            this.RuleUpdateErrors = ruleUpdateErrors;
            // to ensure "updateErrors" is required (not null)
            if (updateErrors == null)
            {
                throw new ArgumentNullException("updateErrors is a required property for WorkflowTransitionRulesUpdateErrorDetails and cannot be null");
            }
            this.UpdateErrors = updateErrors;
            // to ensure "workflowId" is required (not null)
            if (workflowId == null)
            {
                throw new ArgumentNullException("workflowId is a required property for WorkflowTransitionRulesUpdateErrorDetails and cannot be null");
            }
            this.WorkflowId = workflowId;
        }

        /// <summary>
        /// A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn&#39;t updated.
        /// </summary>
        /// <value>A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn&#39;t updated.</value>
        [DataMember(Name = "ruleUpdateErrors", IsRequired = true, EmitDefaultValue = true)]
        public Dictionary<string, List<string>> RuleUpdateErrors { get; set; }

        /// <summary>
        /// The list of errors that specify why the workflow update failed. The workflow was not updated if the list contains any entries.
        /// </summary>
        /// <value>The list of errors that specify why the workflow update failed. The workflow was not updated if the list contains any entries.</value>
        [DataMember(Name = "updateErrors", IsRequired = true, EmitDefaultValue = true)]
        public List<string> UpdateErrors { get; set; }

        /// <summary>
        /// Gets or Sets WorkflowId
        /// </summary>
        [DataMember(Name = "workflowId", IsRequired = true, EmitDefaultValue = true)]
        public WorkflowId WorkflowId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkflowTransitionRulesUpdateErrorDetails {\n");
            sb.Append("  RuleUpdateErrors: ").Append(RuleUpdateErrors).Append("\n");
            sb.Append("  UpdateErrors: ").Append(UpdateErrors).Append("\n");
            sb.Append("  WorkflowId: ").Append(WorkflowId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
