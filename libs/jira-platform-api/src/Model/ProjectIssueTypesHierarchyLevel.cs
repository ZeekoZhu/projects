/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details of an issue type hierarchy level.
    /// </summary>
    [DataContract(Name = "ProjectIssueTypesHierarchyLevel")]
    public partial class ProjectIssueTypesHierarchyLevel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectIssueTypesHierarchyLevel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public ProjectIssueTypesHierarchyLevel()
        {
        }

        /// <summary>
        /// The ID of the issue type hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
        /// </summary>
        /// <value>The ID of the issue type hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).</value>
        [DataMember(Name = "entityId", EmitDefaultValue = false)]
        public Guid EntityId { get; private set; }

        /// <summary>
        /// Returns false as EntityId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeEntityId()
        {
            return false;
        }
        /// <summary>
        /// The list of issue types in the hierarchy level.
        /// </summary>
        /// <value>The list of issue types in the hierarchy level.</value>
        [DataMember(Name = "issueTypes", EmitDefaultValue = false)]
        public List<IssueTypeInfo> IssueTypes { get; private set; }

        /// <summary>
        /// Returns false as IssueTypes should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIssueTypes()
        {
            return false;
        }
        /// <summary>
        /// The level of the issue type hierarchy level.
        /// </summary>
        /// <value>The level of the issue type hierarchy level.</value>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public int Level { get; private set; }

        /// <summary>
        /// Returns false as Level should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeLevel()
        {
            return false;
        }
        /// <summary>
        /// The name of the issue type hierarchy level.
        /// </summary>
        /// <value>The name of the issue type hierarchy level.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; private set; }

        /// <summary>
        /// Returns false as Name should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeName()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProjectIssueTypesHierarchyLevel {\n");
            sb.Append("  EntityId: ").Append(EntityId).Append("\n");
            sb.Append("  IssueTypes: ").Append(IssueTypes).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
