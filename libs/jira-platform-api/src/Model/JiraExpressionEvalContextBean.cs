/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// JiraExpressionEvalContextBean
    /// </summary>
    [DataContract(Name = "JiraExpressionEvalContextBean")]
    public partial class JiraExpressionEvalContextBean : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JiraExpressionEvalContextBean" /> class.
        /// </summary>
        /// <param name="board">The ID of the board that is available under the &#x60;board&#x60; variable when evaluating the expression..</param>
        /// <param name="custom">Custom context variables and their types. These variable types are available for use in a custom context:   *  &#x60;user&#x60;: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user) specified as an Atlassian account ID.  *  &#x60;issue&#x60;: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue) specified by ID or key. All the fields of the issue object are available in the Jira expression.  *  &#x60;json&#x60;: A JSON object containing custom content.  *  &#x60;list&#x60;: A JSON list of &#x60;user&#x60;, &#x60;issue&#x60;, or &#x60;json&#x60; variable types..</param>
        /// <param name="customerRequest">The ID of the customer request that is available under the &#x60;customerRequest&#x60; variable when evaluating the expression. This is the same as the ID of the underlying Jira issue, but the customer request context variable will have a different type..</param>
        /// <param name="issue">The issue that is available under the &#x60;issue&#x60; variable when evaluating the expression..</param>
        /// <param name="issues">The collection of issues that is available under the &#x60;issues&#x60; variable when evaluating the expression..</param>
        /// <param name="project">The project that is available under the &#x60;project&#x60; variable when evaluating the expression..</param>
        /// <param name="serviceDesk">The ID of the service desk that is available under the &#x60;serviceDesk&#x60; variable when evaluating the expression..</param>
        /// <param name="sprint">The ID of the sprint that is available under the &#x60;sprint&#x60; variable when evaluating the expression..</param>
        public JiraExpressionEvalContextBean(long board = default(long), List<CustomContextVariable> custom = default(List<CustomContextVariable>), long customerRequest = default(long), IdOrKeyBean issue = default(IdOrKeyBean), JexpIssues issues = default(JexpIssues), IdOrKeyBean project = default(IdOrKeyBean), long serviceDesk = default(long), long sprint = default(long))
        {
            this.Board = board;
            this.Custom = custom;
            this.CustomerRequest = customerRequest;
            this.Issue = issue;
            this.Issues = issues;
            this.Project = project;
            this.ServiceDesk = serviceDesk;
            this.Sprint = sprint;
        }

        /// <summary>
        /// The ID of the board that is available under the &#x60;board&#x60; variable when evaluating the expression.
        /// </summary>
        /// <value>The ID of the board that is available under the &#x60;board&#x60; variable when evaluating the expression.</value>
        [DataMember(Name = "board", EmitDefaultValue = false)]
        public long Board { get; set; }

        /// <summary>
        /// Custom context variables and their types. These variable types are available for use in a custom context:   *  &#x60;user&#x60;: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user) specified as an Atlassian account ID.  *  &#x60;issue&#x60;: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue) specified by ID or key. All the fields of the issue object are available in the Jira expression.  *  &#x60;json&#x60;: A JSON object containing custom content.  *  &#x60;list&#x60;: A JSON list of &#x60;user&#x60;, &#x60;issue&#x60;, or &#x60;json&#x60; variable types.
        /// </summary>
        /// <value>Custom context variables and their types. These variable types are available for use in a custom context:   *  &#x60;user&#x60;: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user) specified as an Atlassian account ID.  *  &#x60;issue&#x60;: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue) specified by ID or key. All the fields of the issue object are available in the Jira expression.  *  &#x60;json&#x60;: A JSON object containing custom content.  *  &#x60;list&#x60;: A JSON list of &#x60;user&#x60;, &#x60;issue&#x60;, or &#x60;json&#x60; variable types.</value>
        [DataMember(Name = "custom", EmitDefaultValue = false)]
        public List<CustomContextVariable> Custom { get; set; }

        /// <summary>
        /// The ID of the customer request that is available under the &#x60;customerRequest&#x60; variable when evaluating the expression. This is the same as the ID of the underlying Jira issue, but the customer request context variable will have a different type.
        /// </summary>
        /// <value>The ID of the customer request that is available under the &#x60;customerRequest&#x60; variable when evaluating the expression. This is the same as the ID of the underlying Jira issue, but the customer request context variable will have a different type.</value>
        [DataMember(Name = "customerRequest", EmitDefaultValue = false)]
        public long CustomerRequest { get; set; }

        /// <summary>
        /// The issue that is available under the &#x60;issue&#x60; variable when evaluating the expression.
        /// </summary>
        /// <value>The issue that is available under the &#x60;issue&#x60; variable when evaluating the expression.</value>
        [DataMember(Name = "issue", EmitDefaultValue = false)]
        public IdOrKeyBean Issue { get; set; }

        /// <summary>
        /// The collection of issues that is available under the &#x60;issues&#x60; variable when evaluating the expression.
        /// </summary>
        /// <value>The collection of issues that is available under the &#x60;issues&#x60; variable when evaluating the expression.</value>
        [DataMember(Name = "issues", EmitDefaultValue = false)]
        public JexpIssues Issues { get; set; }

        /// <summary>
        /// The project that is available under the &#x60;project&#x60; variable when evaluating the expression.
        /// </summary>
        /// <value>The project that is available under the &#x60;project&#x60; variable when evaluating the expression.</value>
        [DataMember(Name = "project", EmitDefaultValue = false)]
        public IdOrKeyBean Project { get; set; }

        /// <summary>
        /// The ID of the service desk that is available under the &#x60;serviceDesk&#x60; variable when evaluating the expression.
        /// </summary>
        /// <value>The ID of the service desk that is available under the &#x60;serviceDesk&#x60; variable when evaluating the expression.</value>
        [DataMember(Name = "serviceDesk", EmitDefaultValue = false)]
        public long ServiceDesk { get; set; }

        /// <summary>
        /// The ID of the sprint that is available under the &#x60;sprint&#x60; variable when evaluating the expression.
        /// </summary>
        /// <value>The ID of the sprint that is available under the &#x60;sprint&#x60; variable when evaluating the expression.</value>
        [DataMember(Name = "sprint", EmitDefaultValue = false)]
        public long Sprint { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JiraExpressionEvalContextBean {\n");
            sb.Append("  Board: ").Append(Board).Append("\n");
            sb.Append("  Custom: ").Append(Custom).Append("\n");
            sb.Append("  CustomerRequest: ").Append(CustomerRequest).Append("\n");
            sb.Append("  Issue: ").Append(Issue).Append("\n");
            sb.Append("  Issues: ").Append(Issues).Append("\n");
            sb.Append("  Project: ").Append(Project).Append("\n");
            sb.Append("  ServiceDesk: ").Append(ServiceDesk).Append("\n");
            sb.Append("  Sprint: ").Append(Sprint).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
