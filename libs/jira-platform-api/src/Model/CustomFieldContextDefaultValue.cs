/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using JsonSubTypes;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;
using System.Reflection;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// CustomFieldContextDefaultValue
    /// </summary>
    [JsonConverter(typeof(CustomFieldContextDefaultValueJsonConverter))]
    [DataContract(Name = "CustomFieldContextDefaultValue")]
    public partial class CustomFieldContextDefaultValue : AbstractOpenAPISchema, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueCascadingOption" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueCascadingOption.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueCascadingOption actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueMultipleOption" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueMultipleOption.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueMultipleOption actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueSingleOption" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueSingleOption.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueSingleOption actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextSingleUserPickerDefaults" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextSingleUserPickerDefaults.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextSingleUserPickerDefaults actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueMultiUserPicker" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueMultiUserPicker.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueMultiUserPicker actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueSingleGroupPicker" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueSingleGroupPicker.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueSingleGroupPicker actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueMultipleGroupPicker" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueMultipleGroupPicker.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueMultipleGroupPicker actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueDate" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueDate.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueDate actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueDateTime" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueDateTime.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueDateTime actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueURL" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueURL.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueURL actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueProject" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueProject.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueProject actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueFloat" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueFloat.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueFloat actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueLabels" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueLabels.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueLabels actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueTextField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueTextField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueTextField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueTextArea" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueTextArea.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueTextArea actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueReadOnly" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueReadOnly.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueReadOnly actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueSingleVersionPicker" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueSingleVersionPicker.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueSingleVersionPicker actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueMultipleVersionPicker" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueMultipleVersionPicker.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueMultipleVersionPicker actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeStringField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeStringField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeStringField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeMultiStringField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeMultiStringField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeMultiStringField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeObjectField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeObjectField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeObjectField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeDateTimeField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeDateTimeField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeDateTimeField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeGroupField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeGroupField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeGroupField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeMultiGroupField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeMultiGroupField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeMultiGroupField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeNumberField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeNumberField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeNumberField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeUserField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeUserField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeUserField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldContextDefaultValue" /> class
        /// with the <see cref="CustomFieldContextDefaultValueForgeMultiUserField" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomFieldContextDefaultValueForgeMultiUserField.</param>
        public CustomFieldContextDefaultValue(CustomFieldContextDefaultValueForgeMultiUserField actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }


        private Object _actualInstance;

        /// <summary>
        /// Gets or Sets ActualInstance
        /// </summary>
        public override Object ActualInstance
        {
            get
            {
                return _actualInstance;
            }
            set
            {
                if (value.GetType() == typeof(CustomFieldContextDefaultValueCascadingOption))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueDate))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueDateTime))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueFloat))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeDateTimeField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeGroupField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeMultiGroupField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeMultiStringField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeMultiUserField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeNumberField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeObjectField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeStringField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueForgeUserField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueLabels))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueMultiUserPicker))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueMultipleGroupPicker))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueMultipleOption))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueMultipleVersionPicker))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueProject))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueReadOnly))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueSingleGroupPicker))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueSingleOption))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueSingleVersionPicker))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueTextArea))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueTextField))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextDefaultValueURL))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomFieldContextSingleUserPickerDefaults))
                {
                    this._actualInstance = value;
                }
                else
                {
                    throw new ArgumentException("Invalid instance found. Must be the following types: CustomFieldContextDefaultValueCascadingOption, CustomFieldContextDefaultValueDate, CustomFieldContextDefaultValueDateTime, CustomFieldContextDefaultValueFloat, CustomFieldContextDefaultValueForgeDateTimeField, CustomFieldContextDefaultValueForgeGroupField, CustomFieldContextDefaultValueForgeMultiGroupField, CustomFieldContextDefaultValueForgeMultiStringField, CustomFieldContextDefaultValueForgeMultiUserField, CustomFieldContextDefaultValueForgeNumberField, CustomFieldContextDefaultValueForgeObjectField, CustomFieldContextDefaultValueForgeStringField, CustomFieldContextDefaultValueForgeUserField, CustomFieldContextDefaultValueLabels, CustomFieldContextDefaultValueMultiUserPicker, CustomFieldContextDefaultValueMultipleGroupPicker, CustomFieldContextDefaultValueMultipleOption, CustomFieldContextDefaultValueMultipleVersionPicker, CustomFieldContextDefaultValueProject, CustomFieldContextDefaultValueReadOnly, CustomFieldContextDefaultValueSingleGroupPicker, CustomFieldContextDefaultValueSingleOption, CustomFieldContextDefaultValueSingleVersionPicker, CustomFieldContextDefaultValueTextArea, CustomFieldContextDefaultValueTextField, CustomFieldContextDefaultValueURL, CustomFieldContextSingleUserPickerDefaults");
                }
            }
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueCascadingOption`. If the actual instance is not `CustomFieldContextDefaultValueCascadingOption`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueCascadingOption</returns>
        public CustomFieldContextDefaultValueCascadingOption GetCustomFieldContextDefaultValueCascadingOption()
        {
            return (CustomFieldContextDefaultValueCascadingOption)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueMultipleOption`. If the actual instance is not `CustomFieldContextDefaultValueMultipleOption`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueMultipleOption</returns>
        public CustomFieldContextDefaultValueMultipleOption GetCustomFieldContextDefaultValueMultipleOption()
        {
            return (CustomFieldContextDefaultValueMultipleOption)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueSingleOption`. If the actual instance is not `CustomFieldContextDefaultValueSingleOption`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueSingleOption</returns>
        public CustomFieldContextDefaultValueSingleOption GetCustomFieldContextDefaultValueSingleOption()
        {
            return (CustomFieldContextDefaultValueSingleOption)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextSingleUserPickerDefaults`. If the actual instance is not `CustomFieldContextSingleUserPickerDefaults`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextSingleUserPickerDefaults</returns>
        public CustomFieldContextSingleUserPickerDefaults GetCustomFieldContextSingleUserPickerDefaults()
        {
            return (CustomFieldContextSingleUserPickerDefaults)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueMultiUserPicker`. If the actual instance is not `CustomFieldContextDefaultValueMultiUserPicker`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueMultiUserPicker</returns>
        public CustomFieldContextDefaultValueMultiUserPicker GetCustomFieldContextDefaultValueMultiUserPicker()
        {
            return (CustomFieldContextDefaultValueMultiUserPicker)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueSingleGroupPicker`. If the actual instance is not `CustomFieldContextDefaultValueSingleGroupPicker`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueSingleGroupPicker</returns>
        public CustomFieldContextDefaultValueSingleGroupPicker GetCustomFieldContextDefaultValueSingleGroupPicker()
        {
            return (CustomFieldContextDefaultValueSingleGroupPicker)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueMultipleGroupPicker`. If the actual instance is not `CustomFieldContextDefaultValueMultipleGroupPicker`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueMultipleGroupPicker</returns>
        public CustomFieldContextDefaultValueMultipleGroupPicker GetCustomFieldContextDefaultValueMultipleGroupPicker()
        {
            return (CustomFieldContextDefaultValueMultipleGroupPicker)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueDate`. If the actual instance is not `CustomFieldContextDefaultValueDate`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueDate</returns>
        public CustomFieldContextDefaultValueDate GetCustomFieldContextDefaultValueDate()
        {
            return (CustomFieldContextDefaultValueDate)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueDateTime`. If the actual instance is not `CustomFieldContextDefaultValueDateTime`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueDateTime</returns>
        public CustomFieldContextDefaultValueDateTime GetCustomFieldContextDefaultValueDateTime()
        {
            return (CustomFieldContextDefaultValueDateTime)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueURL`. If the actual instance is not `CustomFieldContextDefaultValueURL`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueURL</returns>
        public CustomFieldContextDefaultValueURL GetCustomFieldContextDefaultValueURL()
        {
            return (CustomFieldContextDefaultValueURL)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueProject`. If the actual instance is not `CustomFieldContextDefaultValueProject`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueProject</returns>
        public CustomFieldContextDefaultValueProject GetCustomFieldContextDefaultValueProject()
        {
            return (CustomFieldContextDefaultValueProject)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueFloat`. If the actual instance is not `CustomFieldContextDefaultValueFloat`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueFloat</returns>
        public CustomFieldContextDefaultValueFloat GetCustomFieldContextDefaultValueFloat()
        {
            return (CustomFieldContextDefaultValueFloat)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueLabels`. If the actual instance is not `CustomFieldContextDefaultValueLabels`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueLabels</returns>
        public CustomFieldContextDefaultValueLabels GetCustomFieldContextDefaultValueLabels()
        {
            return (CustomFieldContextDefaultValueLabels)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueTextField`. If the actual instance is not `CustomFieldContextDefaultValueTextField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueTextField</returns>
        public CustomFieldContextDefaultValueTextField GetCustomFieldContextDefaultValueTextField()
        {
            return (CustomFieldContextDefaultValueTextField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueTextArea`. If the actual instance is not `CustomFieldContextDefaultValueTextArea`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueTextArea</returns>
        public CustomFieldContextDefaultValueTextArea GetCustomFieldContextDefaultValueTextArea()
        {
            return (CustomFieldContextDefaultValueTextArea)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueReadOnly`. If the actual instance is not `CustomFieldContextDefaultValueReadOnly`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueReadOnly</returns>
        public CustomFieldContextDefaultValueReadOnly GetCustomFieldContextDefaultValueReadOnly()
        {
            return (CustomFieldContextDefaultValueReadOnly)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueSingleVersionPicker`. If the actual instance is not `CustomFieldContextDefaultValueSingleVersionPicker`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueSingleVersionPicker</returns>
        public CustomFieldContextDefaultValueSingleVersionPicker GetCustomFieldContextDefaultValueSingleVersionPicker()
        {
            return (CustomFieldContextDefaultValueSingleVersionPicker)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueMultipleVersionPicker`. If the actual instance is not `CustomFieldContextDefaultValueMultipleVersionPicker`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueMultipleVersionPicker</returns>
        public CustomFieldContextDefaultValueMultipleVersionPicker GetCustomFieldContextDefaultValueMultipleVersionPicker()
        {
            return (CustomFieldContextDefaultValueMultipleVersionPicker)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeStringField`. If the actual instance is not `CustomFieldContextDefaultValueForgeStringField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeStringField</returns>
        public CustomFieldContextDefaultValueForgeStringField GetCustomFieldContextDefaultValueForgeStringField()
        {
            return (CustomFieldContextDefaultValueForgeStringField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeMultiStringField`. If the actual instance is not `CustomFieldContextDefaultValueForgeMultiStringField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeMultiStringField</returns>
        public CustomFieldContextDefaultValueForgeMultiStringField GetCustomFieldContextDefaultValueForgeMultiStringField()
        {
            return (CustomFieldContextDefaultValueForgeMultiStringField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeObjectField`. If the actual instance is not `CustomFieldContextDefaultValueForgeObjectField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeObjectField</returns>
        public CustomFieldContextDefaultValueForgeObjectField GetCustomFieldContextDefaultValueForgeObjectField()
        {
            return (CustomFieldContextDefaultValueForgeObjectField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeDateTimeField`. If the actual instance is not `CustomFieldContextDefaultValueForgeDateTimeField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeDateTimeField</returns>
        public CustomFieldContextDefaultValueForgeDateTimeField GetCustomFieldContextDefaultValueForgeDateTimeField()
        {
            return (CustomFieldContextDefaultValueForgeDateTimeField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeGroupField`. If the actual instance is not `CustomFieldContextDefaultValueForgeGroupField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeGroupField</returns>
        public CustomFieldContextDefaultValueForgeGroupField GetCustomFieldContextDefaultValueForgeGroupField()
        {
            return (CustomFieldContextDefaultValueForgeGroupField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeMultiGroupField`. If the actual instance is not `CustomFieldContextDefaultValueForgeMultiGroupField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeMultiGroupField</returns>
        public CustomFieldContextDefaultValueForgeMultiGroupField GetCustomFieldContextDefaultValueForgeMultiGroupField()
        {
            return (CustomFieldContextDefaultValueForgeMultiGroupField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeNumberField`. If the actual instance is not `CustomFieldContextDefaultValueForgeNumberField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeNumberField</returns>
        public CustomFieldContextDefaultValueForgeNumberField GetCustomFieldContextDefaultValueForgeNumberField()
        {
            return (CustomFieldContextDefaultValueForgeNumberField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeUserField`. If the actual instance is not `CustomFieldContextDefaultValueForgeUserField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeUserField</returns>
        public CustomFieldContextDefaultValueForgeUserField GetCustomFieldContextDefaultValueForgeUserField()
        {
            return (CustomFieldContextDefaultValueForgeUserField)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomFieldContextDefaultValueForgeMultiUserField`. If the actual instance is not `CustomFieldContextDefaultValueForgeMultiUserField`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomFieldContextDefaultValueForgeMultiUserField</returns>
        public CustomFieldContextDefaultValueForgeMultiUserField GetCustomFieldContextDefaultValueForgeMultiUserField()
        {
            return (CustomFieldContextDefaultValueForgeMultiUserField)this.ActualInstance;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomFieldContextDefaultValue {\n");
            sb.Append("  ActualInstance: ").Append(this.ActualInstance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this.ActualInstance, CustomFieldContextDefaultValue.SerializerSettings);
        }

        /// <summary>
        /// Converts the JSON string into an instance of CustomFieldContextDefaultValue
        /// </summary>
        /// <param name="jsonString">JSON string</param>
        /// <returns>An instance of CustomFieldContextDefaultValue</returns>
        public static CustomFieldContextDefaultValue FromJson(string jsonString)
        {
            CustomFieldContextDefaultValue newCustomFieldContextDefaultValue = null;

            if (string.IsNullOrEmpty(jsonString))
            {
                return newCustomFieldContextDefaultValue;
            }
            int match = 0;
            List<string> matchedTypes = new List<string>();

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueCascadingOption).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueCascadingOption>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueCascadingOption>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueCascadingOption");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueCascadingOption: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueDate).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueDate>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueDate>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueDate");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueDate: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueDateTime).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueDateTime>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueDateTime>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueDateTime");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueDateTime: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueFloat).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueFloat>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueFloat>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueFloat");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueFloat: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeDateTimeField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeDateTimeField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeDateTimeField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeDateTimeField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeDateTimeField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeGroupField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeGroupField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeGroupField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeGroupField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeGroupField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeMultiGroupField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeMultiGroupField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeMultiGroupField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeMultiGroupField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeMultiGroupField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeMultiStringField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeMultiStringField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeMultiStringField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeMultiStringField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeMultiStringField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeMultiUserField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeMultiUserField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeMultiUserField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeMultiUserField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeMultiUserField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeNumberField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeNumberField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeNumberField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeNumberField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeNumberField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeObjectField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeObjectField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeObjectField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeObjectField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeObjectField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeStringField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeStringField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeStringField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeStringField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeStringField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueForgeUserField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeUserField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueForgeUserField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueForgeUserField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueForgeUserField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueLabels).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueLabels>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueLabels>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueLabels");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueLabels: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueMultiUserPicker).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultiUserPicker>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultiUserPicker>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueMultiUserPicker");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueMultiUserPicker: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueMultipleGroupPicker).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultipleGroupPicker>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultipleGroupPicker>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueMultipleGroupPicker");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueMultipleGroupPicker: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueMultipleOption).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultipleOption>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultipleOption>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueMultipleOption");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueMultipleOption: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueMultipleVersionPicker).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultipleVersionPicker>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueMultipleVersionPicker>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueMultipleVersionPicker");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueMultipleVersionPicker: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueProject).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueProject>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueProject>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueProject");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueProject: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueReadOnly).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueReadOnly>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueReadOnly>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueReadOnly");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueReadOnly: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueSingleGroupPicker).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueSingleGroupPicker>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueSingleGroupPicker>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueSingleGroupPicker");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueSingleGroupPicker: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueSingleOption).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueSingleOption>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueSingleOption>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueSingleOption");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueSingleOption: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueSingleVersionPicker).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueSingleVersionPicker>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueSingleVersionPicker>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueSingleVersionPicker");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueSingleVersionPicker: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueTextArea).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueTextArea>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueTextArea>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueTextArea");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueTextArea: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueTextField).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueTextField>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueTextField>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueTextField");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueTextField: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextDefaultValueURL).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueURL>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextDefaultValueURL>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextDefaultValueURL");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextDefaultValueURL: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CustomFieldContextSingleUserPickerDefaults).GetProperty("AdditionalProperties") == null)
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextSingleUserPickerDefaults>(jsonString, CustomFieldContextDefaultValue.SerializerSettings));
                }
                else
                {
                    newCustomFieldContextDefaultValue = new CustomFieldContextDefaultValue(JsonConvert.DeserializeObject<CustomFieldContextSingleUserPickerDefaults>(jsonString, CustomFieldContextDefaultValue.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CustomFieldContextSingleUserPickerDefaults");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomFieldContextSingleUserPickerDefaults: {1}", jsonString, exception.ToString()));
            }

            if (match == 0)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` cannot be deserialized into any schema defined.");
            }
            else if (match > 1)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` incorrectly matches more than one schema (should be exactly one match): " + String.Join(",", matchedTypes));
            }

            // deserialization is considered successful at this point if no exception has been thrown.
            return newCustomFieldContextDefaultValue;
        }


        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// Custom JSON converter for CustomFieldContextDefaultValue
    /// </summary>
    public class CustomFieldContextDefaultValueJsonConverter : JsonConverter
    {
        /// <summary>
        /// To write the JSON string
        /// </summary>
        /// <param name="writer">JSON writer</param>
        /// <param name="value">Object to be converted into a JSON string</param>
        /// <param name="serializer">JSON Serializer</param>
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            writer.WriteRawValue((string)(typeof(CustomFieldContextDefaultValue).GetMethod("ToJson").Invoke(value, null)));
        }

        /// <summary>
        /// To convert a JSON string into an object
        /// </summary>
        /// <param name="reader">JSON reader</param>
        /// <param name="objectType">Object type</param>
        /// <param name="existingValue">Existing value</param>
        /// <param name="serializer">JSON Serializer</param>
        /// <returns>The object converted from the JSON string</returns>
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            switch(reader.TokenType) 
            {
                case JsonToken.StartObject:
                    return CustomFieldContextDefaultValue.FromJson(JObject.Load(reader).ToString(Formatting.None));
                case JsonToken.StartArray:
                    return CustomFieldContextDefaultValue.FromJson(JArray.Load(reader).ToString(Formatting.None));
                default:
                    return null;
            }
        }

        /// <summary>
        /// Check if the object can be converted
        /// </summary>
        /// <param name="objectType">Object type</param>
        /// <returns>True if the object can be converted</returns>
        public override bool CanConvert(Type objectType)
        {
            return false;
        }
    }

}
