/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// The description of the page of issues loaded by the provided JQL query.
    /// </summary>
    [DataContract(Name = "IssuesJqlMetaDataBean")]
    public partial class IssuesJqlMetaDataBean : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IssuesJqlMetaDataBean" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IssuesJqlMetaDataBean() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IssuesJqlMetaDataBean" /> class.
        /// </summary>
        /// <param name="count">The number of issues that were loaded in this evaluation. (required).</param>
        /// <param name="maxResults">The maximum number of issues that could be loaded in this evaluation. (required).</param>
        /// <param name="startAt">The index of the first issue. (required).</param>
        /// <param name="totalCount">The total number of issues the JQL returned. (required).</param>
        /// <param name="validationWarnings">Any warnings related to the JQL query. Present only if the validation mode was set to &#x60;warn&#x60;..</param>
        public IssuesJqlMetaDataBean(int count = default(int), int maxResults = default(int), long startAt = default(long), long totalCount = default(long), List<string> validationWarnings = default(List<string>))
        {
            this.Count = count;
            this.MaxResults = maxResults;
            this.StartAt = startAt;
            this.TotalCount = totalCount;
            this.ValidationWarnings = validationWarnings;
        }

        /// <summary>
        /// The number of issues that were loaded in this evaluation.
        /// </summary>
        /// <value>The number of issues that were loaded in this evaluation.</value>
        [DataMember(Name = "count", IsRequired = true, EmitDefaultValue = true)]
        public int Count { get; set; }

        /// <summary>
        /// The maximum number of issues that could be loaded in this evaluation.
        /// </summary>
        /// <value>The maximum number of issues that could be loaded in this evaluation.</value>
        [DataMember(Name = "maxResults", IsRequired = true, EmitDefaultValue = true)]
        public int MaxResults { get; set; }

        /// <summary>
        /// The index of the first issue.
        /// </summary>
        /// <value>The index of the first issue.</value>
        [DataMember(Name = "startAt", IsRequired = true, EmitDefaultValue = true)]
        public long StartAt { get; set; }

        /// <summary>
        /// The total number of issues the JQL returned.
        /// </summary>
        /// <value>The total number of issues the JQL returned.</value>
        [DataMember(Name = "totalCount", IsRequired = true, EmitDefaultValue = true)]
        public long TotalCount { get; set; }

        /// <summary>
        /// Any warnings related to the JQL query. Present only if the validation mode was set to &#x60;warn&#x60;.
        /// </summary>
        /// <value>Any warnings related to the JQL query. Present only if the validation mode was set to &#x60;warn&#x60;.</value>
        [DataMember(Name = "validationWarnings", EmitDefaultValue = false)]
        public List<string> ValidationWarnings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IssuesJqlMetaDataBean {\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  MaxResults: ").Append(MaxResults).Append("\n");
            sb.Append("  StartAt: ").Append(StartAt).Append("\n");
            sb.Append("  TotalCount: ").Append(TotalCount).Append("\n");
            sb.Append("  ValidationWarnings: ").Append(ValidationWarnings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
