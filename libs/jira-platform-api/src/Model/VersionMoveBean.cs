/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// VersionMoveBean
    /// </summary>
    [DataContract(Name = "VersionMoveBean")]
    public partial class VersionMoveBean : IValidatableObject
    {
        /// <summary>
        /// An absolute position in which to place the moved version. Cannot be used with &#x60;after&#x60;.
        /// </summary>
        /// <value>An absolute position in which to place the moved version. Cannot be used with &#x60;after&#x60;.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PositionEnum
        {
            /// <summary>
            /// Enum Earlier for value: Earlier
            /// </summary>
            [EnumMember(Value = "Earlier")]
            Earlier = 1,

            /// <summary>
            /// Enum Later for value: Later
            /// </summary>
            [EnumMember(Value = "Later")]
            Later = 2,

            /// <summary>
            /// Enum First for value: First
            /// </summary>
            [EnumMember(Value = "First")]
            First = 3,

            /// <summary>
            /// Enum Last for value: Last
            /// </summary>
            [EnumMember(Value = "Last")]
            Last = 4
        }


        /// <summary>
        /// An absolute position in which to place the moved version. Cannot be used with &#x60;after&#x60;.
        /// </summary>
        /// <value>An absolute position in which to place the moved version. Cannot be used with &#x60;after&#x60;.</value>
        [DataMember(Name = "position", EmitDefaultValue = false)]
        public PositionEnum? Position { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="VersionMoveBean" /> class.
        /// </summary>
        /// <param name="after">The URL (self link) of the version after which to place the moved version. Cannot be used with &#x60;position&#x60;..</param>
        /// <param name="position">An absolute position in which to place the moved version. Cannot be used with &#x60;after&#x60;..</param>
        public VersionMoveBean(string after = default(string), PositionEnum? position = default(PositionEnum?))
        {
            this.After = after;
            this.Position = position;
        }

        /// <summary>
        /// The URL (self link) of the version after which to place the moved version. Cannot be used with &#x60;position&#x60;.
        /// </summary>
        /// <value>The URL (self link) of the version after which to place the moved version. Cannot be used with &#x60;position&#x60;.</value>
        [DataMember(Name = "after", EmitDefaultValue = false)]
        public string After { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VersionMoveBean {\n");
            sb.Append("  After: ").Append(After).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
