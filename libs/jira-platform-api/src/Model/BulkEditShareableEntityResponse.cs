/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details of a request to bulk edit shareable entity.
    /// </summary>
    [DataContract(Name = "BulkEditShareableEntityResponse")]
    public partial class BulkEditShareableEntityResponse : IValidatableObject
    {
        /// <summary>
        /// Allowed action for bulk edit shareable entity
        /// </summary>
        /// <value>Allowed action for bulk edit shareable entity</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ActionEnum
        {
            /// <summary>
            /// Enum ChangeOwner for value: changeOwner
            /// </summary>
            [EnumMember(Value = "changeOwner")]
            ChangeOwner = 1,

            /// <summary>
            /// Enum ChangePermission for value: changePermission
            /// </summary>
            [EnumMember(Value = "changePermission")]
            ChangePermission = 2,

            /// <summary>
            /// Enum AddPermission for value: addPermission
            /// </summary>
            [EnumMember(Value = "addPermission")]
            AddPermission = 3,

            /// <summary>
            /// Enum RemovePermission for value: removePermission
            /// </summary>
            [EnumMember(Value = "removePermission")]
            RemovePermission = 4
        }


        /// <summary>
        /// Allowed action for bulk edit shareable entity
        /// </summary>
        /// <value>Allowed action for bulk edit shareable entity</value>
        [DataMember(Name = "action", IsRequired = true, EmitDefaultValue = true)]
        public ActionEnum Action { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkEditShareableEntityResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BulkEditShareableEntityResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkEditShareableEntityResponse" /> class.
        /// </summary>
        /// <param name="action">Allowed action for bulk edit shareable entity (required).</param>
        /// <param name="entityErrors">The mapping dashboard id to errors if any..</param>
        public BulkEditShareableEntityResponse(ActionEnum action = default(ActionEnum), Dictionary<string, BulkEditActionError> entityErrors = default(Dictionary<string, BulkEditActionError>))
        {
            this.Action = action;
            this.EntityErrors = entityErrors;
        }

        /// <summary>
        /// The mapping dashboard id to errors if any.
        /// </summary>
        /// <value>The mapping dashboard id to errors if any.</value>
        [DataMember(Name = "entityErrors", EmitDefaultValue = false)]
        public Dictionary<string, BulkEditActionError> EntityErrors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BulkEditShareableEntityResponse {\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  EntityErrors: ").Append(EntityErrors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
