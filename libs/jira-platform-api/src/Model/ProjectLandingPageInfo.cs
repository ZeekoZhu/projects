/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// The project landing page info.
    /// </summary>
    [DataContract(Name = "Project_landingPageInfo")]
    public partial class ProjectLandingPageInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectLandingPageInfo" /> class.
        /// </summary>
        /// <param name="attributes">attributes.</param>
        /// <param name="boardId">boardId.</param>
        /// <param name="boardName">boardName.</param>
        /// <param name="projectKey">projectKey.</param>
        /// <param name="projectType">projectType.</param>
        /// <param name="queueCategory">queueCategory.</param>
        /// <param name="queueId">queueId.</param>
        /// <param name="queueName">queueName.</param>
        /// <param name="simpleBoard">simpleBoard.</param>
        /// <param name="simplified">simplified.</param>
        /// <param name="url">url.</param>
        public ProjectLandingPageInfo(Dictionary<string, string> attributes = default(Dictionary<string, string>), long boardId = default(long), string boardName = default(string), string projectKey = default(string), string projectType = default(string), string queueCategory = default(string), long queueId = default(long), string queueName = default(string), bool simpleBoard = default(bool), bool simplified = default(bool), string url = default(string))
        {
            this.Attributes = attributes;
            this.BoardId = boardId;
            this.BoardName = boardName;
            this.ProjectKey = projectKey;
            this.ProjectType = projectType;
            this.QueueCategory = queueCategory;
            this.QueueId = queueId;
            this.QueueName = queueName;
            this.SimpleBoard = simpleBoard;
            this.Simplified = simplified;
            this.Url = url;
        }

        /// <summary>
        /// Gets or Sets Attributes
        /// </summary>
        [DataMember(Name = "attributes", EmitDefaultValue = false)]
        public Dictionary<string, string> Attributes { get; set; }

        /// <summary>
        /// Gets or Sets BoardId
        /// </summary>
        [DataMember(Name = "boardId", EmitDefaultValue = false)]
        public long BoardId { get; set; }

        /// <summary>
        /// Gets or Sets BoardName
        /// </summary>
        [DataMember(Name = "boardName", EmitDefaultValue = false)]
        public string BoardName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectKey
        /// </summary>
        [DataMember(Name = "projectKey", EmitDefaultValue = false)]
        public string ProjectKey { get; set; }

        /// <summary>
        /// Gets or Sets ProjectType
        /// </summary>
        [DataMember(Name = "projectType", EmitDefaultValue = false)]
        public string ProjectType { get; set; }

        /// <summary>
        /// Gets or Sets QueueCategory
        /// </summary>
        [DataMember(Name = "queueCategory", EmitDefaultValue = false)]
        public string QueueCategory { get; set; }

        /// <summary>
        /// Gets or Sets QueueId
        /// </summary>
        [DataMember(Name = "queueId", EmitDefaultValue = false)]
        public long QueueId { get; set; }

        /// <summary>
        /// Gets or Sets QueueName
        /// </summary>
        [DataMember(Name = "queueName", EmitDefaultValue = false)]
        public string QueueName { get; set; }

        /// <summary>
        /// Gets or Sets SimpleBoard
        /// </summary>
        [DataMember(Name = "simpleBoard", EmitDefaultValue = true)]
        public bool SimpleBoard { get; set; }

        /// <summary>
        /// Gets or Sets Simplified
        /// </summary>
        [DataMember(Name = "simplified", EmitDefaultValue = true)]
        public bool Simplified { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProjectLandingPageInfo {\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("  BoardId: ").Append(BoardId).Append("\n");
            sb.Append("  BoardName: ").Append(BoardName).Append("\n");
            sb.Append("  ProjectKey: ").Append(ProjectKey).Append("\n");
            sb.Append("  ProjectType: ").Append(ProjectType).Append("\n");
            sb.Append("  QueueCategory: ").Append(QueueCategory).Append("\n");
            sb.Append("  QueueId: ").Append(QueueId).Append("\n");
            sb.Append("  QueueName: ").Append(QueueName).Append("\n");
            sb.Append("  SimpleBoard: ").Append(SimpleBoard).Append("\n");
            sb.Append("  Simplified: ").Append(Simplified).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
