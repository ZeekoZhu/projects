/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Projects.JiraPlatformApi.Client.OpenAPIDateConverter;

namespace Projects.JiraPlatformApi.Model
{
    /// <summary>
    /// Details of a custom field.
    /// </summary>
    [DataContract(Name = "UpdateCustomFieldDetails")]
    public partial class UpdateCustomFieldDetails : IValidatableObject
    {
        /// <summary>
        /// The searcher that defines the way the field is searched in Jira. It can be set to &#x60;null&#x60;, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  &#x60;cascadingselect&#x60;: &#x60;cascadingselectsearcher&#x60;  *  &#x60;datepicker&#x60;: &#x60;daterange&#x60;  *  &#x60;datetime&#x60;: &#x60;datetimerange&#x60;  *  &#x60;float&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;grouppicker&#x60;: &#x60;grouppickersearcher&#x60;  *  &#x60;importid&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;labels&#x60;: &#x60;labelsearcher&#x60;  *  &#x60;multicheckboxes&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multigrouppicker&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiselect&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiuserpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;multiversion&#x60;: &#x60;versionsearcher&#x60;  *  &#x60;project&#x60;: &#x60;projectsearcher&#x60;  *  &#x60;radiobuttons&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;readonlyfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;select&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;textarea&#x60;: &#x60;textsearcher&#x60;  *  &#x60;textfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;url&#x60;: &#x60;exacttextsearcher&#x60;  *  &#x60;userpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;version&#x60;: &#x60;versionsearcher&#x60;
        /// </summary>
        /// <value>The searcher that defines the way the field is searched in Jira. It can be set to &#x60;null&#x60;, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  &#x60;cascadingselect&#x60;: &#x60;cascadingselectsearcher&#x60;  *  &#x60;datepicker&#x60;: &#x60;daterange&#x60;  *  &#x60;datetime&#x60;: &#x60;datetimerange&#x60;  *  &#x60;float&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;grouppicker&#x60;: &#x60;grouppickersearcher&#x60;  *  &#x60;importid&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;labels&#x60;: &#x60;labelsearcher&#x60;  *  &#x60;multicheckboxes&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multigrouppicker&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiselect&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiuserpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;multiversion&#x60;: &#x60;versionsearcher&#x60;  *  &#x60;project&#x60;: &#x60;projectsearcher&#x60;  *  &#x60;radiobuttons&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;readonlyfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;select&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;textarea&#x60;: &#x60;textsearcher&#x60;  *  &#x60;textfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;url&#x60;: &#x60;exacttextsearcher&#x60;  *  &#x60;userpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;version&#x60;: &#x60;versionsearcher&#x60;</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SearcherKeyEnum
        {
            /// <summary>
            /// Enum Cascadingselectsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher")]
            Cascadingselectsearcher = 1,

            /// <summary>
            /// Enum Daterange for value: com.atlassian.jira.plugin.system.customfieldtypes:daterange
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:daterange")]
            Daterange = 2,

            /// <summary>
            /// Enum Datetimerange for value: com.atlassian.jira.plugin.system.customfieldtypes:datetimerange
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:datetimerange")]
            Datetimerange = 3,

            /// <summary>
            /// Enum Exactnumber for value: com.atlassian.jira.plugin.system.customfieldtypes:exactnumber
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:exactnumber")]
            Exactnumber = 4,

            /// <summary>
            /// Enum Exacttextsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher")]
            Exacttextsearcher = 5,

            /// <summary>
            /// Enum Grouppickersearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher")]
            Grouppickersearcher = 6,

            /// <summary>
            /// Enum Labelsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher")]
            Labelsearcher = 7,

            /// <summary>
            /// Enum Multiselectsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher")]
            Multiselectsearcher = 8,

            /// <summary>
            /// Enum Numberrange for value: com.atlassian.jira.plugin.system.customfieldtypes:numberrange
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:numberrange")]
            Numberrange = 9,

            /// <summary>
            /// Enum Projectsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher")]
            Projectsearcher = 10,

            /// <summary>
            /// Enum Textsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:textsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:textsearcher")]
            Textsearcher = 11,

            /// <summary>
            /// Enum Userpickergroupsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher")]
            Userpickergroupsearcher = 12,

            /// <summary>
            /// Enum Versionsearcher for value: com.atlassian.jira.plugin.system.customfieldtypes:versionsearcher
            /// </summary>
            [EnumMember(Value = "com.atlassian.jira.plugin.system.customfieldtypes:versionsearcher")]
            Versionsearcher = 13
        }


        /// <summary>
        /// The searcher that defines the way the field is searched in Jira. It can be set to &#x60;null&#x60;, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  &#x60;cascadingselect&#x60;: &#x60;cascadingselectsearcher&#x60;  *  &#x60;datepicker&#x60;: &#x60;daterange&#x60;  *  &#x60;datetime&#x60;: &#x60;datetimerange&#x60;  *  &#x60;float&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;grouppicker&#x60;: &#x60;grouppickersearcher&#x60;  *  &#x60;importid&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;labels&#x60;: &#x60;labelsearcher&#x60;  *  &#x60;multicheckboxes&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multigrouppicker&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiselect&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiuserpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;multiversion&#x60;: &#x60;versionsearcher&#x60;  *  &#x60;project&#x60;: &#x60;projectsearcher&#x60;  *  &#x60;radiobuttons&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;readonlyfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;select&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;textarea&#x60;: &#x60;textsearcher&#x60;  *  &#x60;textfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;url&#x60;: &#x60;exacttextsearcher&#x60;  *  &#x60;userpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;version&#x60;: &#x60;versionsearcher&#x60;
        /// </summary>
        /// <value>The searcher that defines the way the field is searched in Jira. It can be set to &#x60;null&#x60;, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  &#x60;cascadingselect&#x60;: &#x60;cascadingselectsearcher&#x60;  *  &#x60;datepicker&#x60;: &#x60;daterange&#x60;  *  &#x60;datetime&#x60;: &#x60;datetimerange&#x60;  *  &#x60;float&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;grouppicker&#x60;: &#x60;grouppickersearcher&#x60;  *  &#x60;importid&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;labels&#x60;: &#x60;labelsearcher&#x60;  *  &#x60;multicheckboxes&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multigrouppicker&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiselect&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiuserpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;multiversion&#x60;: &#x60;versionsearcher&#x60;  *  &#x60;project&#x60;: &#x60;projectsearcher&#x60;  *  &#x60;radiobuttons&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;readonlyfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;select&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;textarea&#x60;: &#x60;textsearcher&#x60;  *  &#x60;textfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;url&#x60;: &#x60;exacttextsearcher&#x60;  *  &#x60;userpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;version&#x60;: &#x60;versionsearcher&#x60;</value>
        [DataMember(Name = "searcherKey", EmitDefaultValue = false)]
        public SearcherKeyEnum? SearcherKey { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateCustomFieldDetails" /> class.
        /// </summary>
        /// <param name="description">The description of the custom field. The maximum length is 40000 characters..</param>
        /// <param name="name">The name of the custom field. It doesn&#39;t have to be unique. The maximum length is 255 characters..</param>
        /// <param name="searcherKey">The searcher that defines the way the field is searched in Jira. It can be set to &#x60;null&#x60;, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  &#x60;cascadingselect&#x60;: &#x60;cascadingselectsearcher&#x60;  *  &#x60;datepicker&#x60;: &#x60;daterange&#x60;  *  &#x60;datetime&#x60;: &#x60;datetimerange&#x60;  *  &#x60;float&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;grouppicker&#x60;: &#x60;grouppickersearcher&#x60;  *  &#x60;importid&#x60;: &#x60;exactnumber&#x60; or &#x60;numberrange&#x60;  *  &#x60;labels&#x60;: &#x60;labelsearcher&#x60;  *  &#x60;multicheckboxes&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multigrouppicker&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiselect&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;multiuserpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;multiversion&#x60;: &#x60;versionsearcher&#x60;  *  &#x60;project&#x60;: &#x60;projectsearcher&#x60;  *  &#x60;radiobuttons&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;readonlyfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;select&#x60;: &#x60;multiselectsearcher&#x60;  *  &#x60;textarea&#x60;: &#x60;textsearcher&#x60;  *  &#x60;textfield&#x60;: &#x60;textsearcher&#x60;  *  &#x60;url&#x60;: &#x60;exacttextsearcher&#x60;  *  &#x60;userpicker&#x60;: &#x60;userpickergroupsearcher&#x60;  *  &#x60;version&#x60;: &#x60;versionsearcher&#x60;.</param>
        public UpdateCustomFieldDetails(string description = default(string), string name = default(string), SearcherKeyEnum? searcherKey = default(SearcherKeyEnum?))
        {
            this.Description = description;
            this.Name = name;
            this.SearcherKey = searcherKey;
        }

        /// <summary>
        /// The description of the custom field. The maximum length is 40000 characters.
        /// </summary>
        /// <value>The description of the custom field. The maximum length is 40000 characters.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// The name of the custom field. It doesn&#39;t have to be unique. The maximum length is 255 characters.
        /// </summary>
        /// <value>The name of the custom field. It doesn&#39;t have to be unique. The maximum length is 255 characters.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateCustomFieldDetails {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SearcherKey: ").Append(SearcherKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
