/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Projects.JiraPlatformApi.Client;
using Projects.JiraPlatformApi.Client.Auth;
using Projects.JiraPlatformApi.Model;

namespace Projects.JiraPlatformApi.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDynamicModulesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get modules
        /// </summary>
        /// <remarks>
        /// Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ConnectModules</returns>
        ConnectModules DynamicModulesResourceGetModulesGet(int operationIndex = 0);

        /// <summary>
        /// Get modules
        /// </summary>
        /// <remarks>
        /// Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ConnectModules</returns>
        ApiResponse<ConnectModules> DynamicModulesResourceGetModulesGetWithHttpInfo(int operationIndex = 0);
        /// <summary>
        /// Register modules
        /// </summary>
        /// <remarks>
        /// Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void DynamicModulesResourceRegisterModulesPost(ConnectModules connectModules, int operationIndex = 0);

        /// <summary>
        /// Register modules
        /// </summary>
        /// <remarks>
        /// Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DynamicModulesResourceRegisterModulesPostWithHttpInfo(ConnectModules connectModules, int operationIndex = 0);
        /// <summary>
        /// Remove modules
        /// </summary>
        /// <remarks>
        /// Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void DynamicModulesResourceRemoveModulesDelete(List<string>? moduleKey = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Remove modules
        /// </summary>
        /// <remarks>
        /// Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DynamicModulesResourceRemoveModulesDeleteWithHttpInfo(List<string>? moduleKey = default(List<string>?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDynamicModulesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get modules
        /// </summary>
        /// <remarks>
        /// Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ConnectModules</returns>
        System.Threading.Tasks.Task<ConnectModules> DynamicModulesResourceGetModulesGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get modules
        /// </summary>
        /// <remarks>
        /// Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ConnectModules)</returns>
        System.Threading.Tasks.Task<ApiResponse<ConnectModules>> DynamicModulesResourceGetModulesGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Register modules
        /// </summary>
        /// <remarks>
        /// Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DynamicModulesResourceRegisterModulesPostAsync(ConnectModules connectModules, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Register modules
        /// </summary>
        /// <remarks>
        /// Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DynamicModulesResourceRegisterModulesPostWithHttpInfoAsync(ConnectModules connectModules, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Remove modules
        /// </summary>
        /// <remarks>
        /// Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DynamicModulesResourceRemoveModulesDeleteAsync(List<string>? moduleKey = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Remove modules
        /// </summary>
        /// <remarks>
        /// Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </remarks>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DynamicModulesResourceRemoveModulesDeleteWithHttpInfoAsync(List<string>? moduleKey = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDynamicModulesApi : IDynamicModulesApiSync, IDynamicModulesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DynamicModulesApi : IDynamicModulesApi
    {
        private Projects.JiraPlatformApi.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DynamicModulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DynamicModulesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DynamicModulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DynamicModulesApi(string basePath)
        {
            this.Configuration = Projects.JiraPlatformApi.Client.Configuration.MergeConfigurations(
                Projects.JiraPlatformApi.Client.GlobalConfiguration.Instance,
                new Projects.JiraPlatformApi.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Projects.JiraPlatformApi.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Projects.JiraPlatformApi.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Projects.JiraPlatformApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DynamicModulesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DynamicModulesApi(Projects.JiraPlatformApi.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Projects.JiraPlatformApi.Client.Configuration.MergeConfigurations(
                Projects.JiraPlatformApi.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Projects.JiraPlatformApi.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Projects.JiraPlatformApi.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Projects.JiraPlatformApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DynamicModulesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DynamicModulesApi(Projects.JiraPlatformApi.Client.ISynchronousClient client, Projects.JiraPlatformApi.Client.IAsynchronousClient asyncClient, Projects.JiraPlatformApi.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Projects.JiraPlatformApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Projects.JiraPlatformApi.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Projects.JiraPlatformApi.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Projects.JiraPlatformApi.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Projects.JiraPlatformApi.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get modules Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ConnectModules</returns>
        public ConnectModules DynamicModulesResourceGetModulesGet(int operationIndex = 0)
        {
            Projects.JiraPlatformApi.Client.ApiResponse<ConnectModules> localVarResponse = DynamicModulesResourceGetModulesGetWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get modules Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ConnectModules</returns>
        public Projects.JiraPlatformApi.Client.ApiResponse<ConnectModules> DynamicModulesResourceGetModulesGetWithHttpInfo(int operationIndex = 0)
        {
            Projects.JiraPlatformApi.Client.RequestOptions localVarRequestOptions = new Projects.JiraPlatformApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DynamicModulesApi.DynamicModulesResourceGetModulesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<ConnectModules>("/rest/atlassian-connect/1/app/module/dynamic", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DynamicModulesResourceGetModulesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get modules Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ConnectModules</returns>
        public async System.Threading.Tasks.Task<ConnectModules> DynamicModulesResourceGetModulesGetAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Projects.JiraPlatformApi.Client.ApiResponse<ConnectModules> localVarResponse = await DynamicModulesResourceGetModulesGetWithHttpInfoAsync(operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get modules Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ConnectModules)</returns>
        public async System.Threading.Tasks.Task<Projects.JiraPlatformApi.Client.ApiResponse<ConnectModules>> DynamicModulesResourceGetModulesGetWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Projects.JiraPlatformApi.Client.RequestOptions localVarRequestOptions = new Projects.JiraPlatformApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "DynamicModulesApi.DynamicModulesResourceGetModulesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ConnectModules>("/rest/atlassian-connect/1/app/module/dynamic", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DynamicModulesResourceGetModulesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Register modules Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void DynamicModulesResourceRegisterModulesPost(ConnectModules connectModules, int operationIndex = 0)
        {
            DynamicModulesResourceRegisterModulesPostWithHttpInfo(connectModules);
        }

        /// <summary>
        /// Register modules Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Projects.JiraPlatformApi.Client.ApiResponse<Object> DynamicModulesResourceRegisterModulesPostWithHttpInfo(ConnectModules connectModules, int operationIndex = 0)
        {
            // verify the required parameter 'connectModules' is set
            if (connectModules == null)
            {
                throw new Projects.JiraPlatformApi.Client.ApiException(400, "Missing required parameter 'connectModules' when calling DynamicModulesApi->DynamicModulesResourceRegisterModulesPost");
            }

            Projects.JiraPlatformApi.Client.RequestOptions localVarRequestOptions = new Projects.JiraPlatformApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = connectModules;

            localVarRequestOptions.Operation = "DynamicModulesApi.DynamicModulesResourceRegisterModulesPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/rest/atlassian-connect/1/app/module/dynamic", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DynamicModulesResourceRegisterModulesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Register modules Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DynamicModulesResourceRegisterModulesPostAsync(ConnectModules connectModules, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await DynamicModulesResourceRegisterModulesPostWithHttpInfoAsync(connectModules, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Register modules Registers a list of modules.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="connectModules"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Projects.JiraPlatformApi.Client.ApiResponse<Object>> DynamicModulesResourceRegisterModulesPostWithHttpInfoAsync(ConnectModules connectModules, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'connectModules' is set
            if (connectModules == null)
            {
                throw new Projects.JiraPlatformApi.Client.ApiException(400, "Missing required parameter 'connectModules' when calling DynamicModulesApi->DynamicModulesResourceRegisterModulesPost");
            }


            Projects.JiraPlatformApi.Client.RequestOptions localVarRequestOptions = new Projects.JiraPlatformApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = connectModules;

            localVarRequestOptions.Operation = "DynamicModulesApi.DynamicModulesResourceRegisterModulesPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/rest/atlassian-connect/1/app/module/dynamic", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DynamicModulesResourceRegisterModulesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remove modules Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void DynamicModulesResourceRemoveModulesDelete(List<string>? moduleKey = default(List<string>?), int operationIndex = 0)
        {
            DynamicModulesResourceRemoveModulesDeleteWithHttpInfo(moduleKey);
        }

        /// <summary>
        /// Remove modules Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Projects.JiraPlatformApi.Client.ApiResponse<Object> DynamicModulesResourceRemoveModulesDeleteWithHttpInfo(List<string>? moduleKey = default(List<string>?), int operationIndex = 0)
        {
            Projects.JiraPlatformApi.Client.RequestOptions localVarRequestOptions = new Projects.JiraPlatformApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (moduleKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Projects.JiraPlatformApi.Client.ClientUtils.ParameterToMultiMap("multi", "moduleKey", moduleKey));
            }

            localVarRequestOptions.Operation = "DynamicModulesApi.DynamicModulesResourceRemoveModulesDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/rest/atlassian-connect/1/app/module/dynamic", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DynamicModulesResourceRemoveModulesDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Remove modules Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DynamicModulesResourceRemoveModulesDeleteAsync(List<string>? moduleKey = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await DynamicModulesResourceRemoveModulesDeleteWithHttpInfoAsync(moduleKey, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Remove modules Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
        /// </summary>
        /// <exception cref="Projects.JiraPlatformApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moduleKey">The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter. For example, &#x60;moduleKey&#x3D;dynamic-attachment-entity-property&amp;moduleKey&#x3D;dynamic-select-field&#x60;. Nonexistent keys are ignored. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Projects.JiraPlatformApi.Client.ApiResponse<Object>> DynamicModulesResourceRemoveModulesDeleteWithHttpInfoAsync(List<string>? moduleKey = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Projects.JiraPlatformApi.Client.RequestOptions localVarRequestOptions = new Projects.JiraPlatformApi.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Projects.JiraPlatformApi.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (moduleKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Projects.JiraPlatformApi.Client.ClientUtils.ParameterToMultiMap("multi", "moduleKey", moduleKey));
            }

            localVarRequestOptions.Operation = "DynamicModulesApi.DynamicModulesResourceRemoveModulesDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/rest/atlassian-connect/1/app/module/dynamic", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DynamicModulesResourceRemoveModulesDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
